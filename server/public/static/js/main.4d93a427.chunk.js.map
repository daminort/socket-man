{"version":3,"sources":["serviceWorker.js","redux/utils.js","redux/app/actions.js","constants/socket.js","redux/app/selectors.js","components/lib/Alert.js","components/lib/Avatar.js","components/lib/Breadcrumb.js","components/lib/Button.js","components/lib/Checkbox.js","components/lib/Collapse.js","components/lib/Icon.js","components/lib/Input.js","components/lib/Layout.js","components/lib/Menu.js","components/lib/Message.js","components/lib/Modal.js","components/lib/Select.js","components/lib/Tag.js","components/lib/Typography.js","constants/theme.js","components/layouts/MainContent/MainContent.style.js","components/layouts/MainContent/MainContent.js","components/layouts/MainContent/index.js","components/layouts/MainLayout/MainLayout.style.js","components/layouts/MainLayout/MainLayout.js","components/layouts/MainLayout/index.js","config.js","components/animated/Alert/index.js","components/animated/Alert/Alert.js","components/connected/SocketStatus/SocketStatus.js","components/connected/SocketStatus/index.js","components/connected/ConnectedUsers/ConnectedUsers.js","components/connected/ConnectedUsers/index.js","containers/Header/Header.style.js","containers/Header/Header.js","containers/Footer/Footer.style.js","containers/Footer/Footer.js","redux/queries/actions.js","redux/emitter/actions.js","redux/queries/selectors.js","constants/common.js","components/ui/Avatar/Avatar.style.js","components/ui/Avatar/Avatar.js","components/ui/Avatar/index.js","components/ui/EventTypeSelect/EventTypeSelect.js","components/ui/Logo/Logo.style.js","components/ui/Logo/index.js","components/ui/Logo/Logo.js","containers/Sidebar/ItemContent/ItemContent.js","containers/Sidebar/Sidebar.style.js","containers/Sidebar/Sidebar.js","containers/Sidebar/propTypes.js","redux/history/actions.js","redux/history/selectors.js","components/forms/prop-types.js","components/forms/Control/Control.style.js","components/forms/Control/Control.js","components/forms/Input/Input.js","components/forms/Input/index.js","components/forms/Select/Select.js","components/forms/Select/index.js","components/forms/TextArea/TextArea.js","components/forms/TextArea/index.js","containers/History/Toolbar/Toolbar.style.js","containers/History/Toolbar/Toolbar.js","containers/History/Toolbar/index.js","containers/History/List/Message/Message.style.js","containers/History/List/Message/Message.js","containers/History/List/Message/index.js","containers/History/List/List.style.js","containers/History/List/List.js","containers/History/List/index.js","containers/History/History.style.js","containers/History/History.js","redux/socket/actions.js","containers/Settings/Settings.style.js","containers/Settings/Settings.js","redux/emitter/selectors.js","helpers/validators/emitter.js","helpers/utils/FeedbackUtils.js","helpers/validators/query.js","containers/Emitter/Toolbar/Toolbar.style.js","containers/Emitter/Toolbar/Toolbar.js","containers/Emitter/Toolbar/index.js","containers/Emitter/Hint/Hint.style.js","containers/Emitter/Hint/index.js","containers/Emitter/Hint/Hint.js","containers/Emitter/Emitter.style.js","containers/Emitter/Emitter.js","modals/Query/Query.style.js","modals/Query/Query.js","modals/Query/index.js","containers/Root/Root.style.js","containers/Root/Root.js","containers/Root/index.js","socket-io/index.js","helpers/utils/CommonUtils.js","redux/app/reducer.js","redux/emitter/reducer.js","redux/history/reducer.js","redux/queries/reducer.js","redux/reducers.js","redux/app/saga.js","helpers/utils/StorageUtils.js","redux/queries/saga.js","constants/formats.js","helpers/Formatter.js","helpers/utils/MessagesUtils.js","redux/socket/saga.js","redux/sagas.js","redux/store.js","socket-io/subscribe.js","index.js","helpers/utils/TransformsUtils.js"],"names":["Boolean","window","location","hostname","match","makeActionCreator","type","_len","arguments","length","argNames","Array","_key","_len2","args","_key2","action","payload","forEach","arg","index","name","TYPES","APP_START","concat","APP_PARAMS_SET","SOCKET_PARAMS_SET","actions","Object","objectSpread","appStart","appParamsSet","socketParamsSet","SOCKET_STATUS","freeze","connected","disconnected","reconnection","error","MESSAGE_TYPES","server","client","admin","EVENT_TYPES","ping","get","post","selectApp","createSelector","state","App","app","selectSocket","socket","status","Alert","Avatar","Breadcrumb","Item","Button","Checkbox","Group","Collapse","Panel","Icon","TextArea","Input","Password","Search","Header","Layout","Content","Footer","Sider","MenuItem","Menu","SubMenu","Message","Modal","Option","Select","Tag","Paragraph","Typography","Text","Title","THEME","height","header","footer","historyToolbar","emitterToolbar","h4Titile","margin","mainContent","historyList","padding","bg","sidebar","panel","text","main","hint","inverted","sidebarType","border","history","h","m","p","historyContainer","leftContainer","MIN_HEIGHTS","styled","LibContent","_templateObject","MainContent","_ref","children","react_default","a","createElement","MainContent_style_Content","className","defaultProps","LibLayout","MainLayout_style_templateObject","MainLayout","MainLayout_style_Layout","process","REACT_APP_SOCKET_SERVER_PROTOCOL","REACT_APP_SOCKET_SERVER_ADDRESS","REACT_APP_SOCKET_SERVER_PORT","REACT_APP_ADMIN_HASH","protocol","address","port","socketConnectionString","adminHash","alertProps","useTransition","from","opacity","enter","leave","map","item","key","props","web","div","style","lib_Alert","alertTypes","_alertTypes","defineProperty","alertMessages","_alertMessages","SocketStatus","connect","message","animated_Alert","showIcon","ConnectedUsers","connectedUsers","user","id","origin","handshake","headers","Wrapper","Header_style_templateObject","connected_ConnectedUsers","connected_SocketStatus","Footer_style_templateObject","Footer_style_Wrapper","href","target","rel","QUERY_SAVE","QUERY_REMOVE","QUERIES_SET","QUERIES_RESTORE","MODAL_DATA_SET","MODAL_DATA_RESET","querySave","queryRemove","queriesSet","queriesRestore","modalDataSet","modalDataReset","EVENT_DATA_SET","EVENT_TYPES_SET","EVENT_TYPE_ADD","TOOLBAR_PARAMS_SET","eventDataSet","eventTypesSet","eventTypeAdd","toolbarParamsSet","selectQueries","Queries","queries","selectModal","modal","selectQuery","defaultValue","undefined","find","POSITION","left","right","top","bottom","STORAGE_KEYS","StyledWrapper","Avatar_style_templateObject","icons","_icons","position","classnames","size","icon","title","capitalize","selectStyle","minWidth","EventTypeSelect","forwardRef","ref","eventTypes","value","onChange","restProps","objectWithoutProperties","resStyle","options","lib_Select","assign","Logo_style_templateObject","Logo","collapsed","Logo_style_Wrapper","ItemContent","onClick","event","stopPropagation","mapActions","queriesActions","Sidebar_style_templateObject","PropTypes","isRequired","body","emitterActions","queryID","_useState","useState","_useState2","slicedToArray","setCollapsed","noItems","Sidebar_ItemContent_ItemContent","menuItems","collapsible","width","onCollapse","Sidebar_style_Wrapper","ui_Logo","theme","mode","selectedKeys","onSelect","query","eventType","MESSAGE_ADD","MESSAGES_CLEAR","EVENT_TYPES_CLEAR","FILTER_DATA_SET","FILTER_DATA_RESET","messageAdd","messagesClear","eventTypesClear","filterDataSet","filterDataReset","selectMessages","History","messages","selectEventTypes","selectEventTypesList","TransformsUtils","createSelectOptions","selectFilter","filter","selectFilteredMessages","String","trim","includes","Date","onBlur","touched","errors","label","labelWidth","noLabel","noStretch","field","form","Control_style_templateObject","Control","component","lStyle","marginRight","wStyle","Control_style_Wrapper","forms_Control_Control","lib_Input","optionItems","rows","onChangeValue","Input_TextArea","Toolbar_style_templateObject","initialValues","Toolbar","formRef","useRef","onReset","current","resetForm","Toolbar_style_Wrapper","formik_esm","onSubmit","values","setSubmitting","render","_ref2","isSubmitting","fieldProps","forms_Select","forms_Input","placeholder","htmlType","disabled","displayName","historyActions","Message_style_templateObject","ellipsis","expandable","date","sender","blockClass","contentClass","Message_style_Wrapper","ui_Avatar","copyable","color","List_style_templateObject","List","items","List_Message","List_style_Wrapper","History_style_templateObject","HistoryContainer","History_style_Wrapper","level","History_Toolbar","History_List","OUTCOMING_PING_ENABLED","OUTCOMING_IMITATE_USERS","OUTCOMING_EMIT_EVENT","OUTCOMING_SUBSCRIBE_ON_EVENT","OUTCOMING_GET_SERVER_SETTINGS","OUTCOMING_GET_CONNECTED_USERS","INCOMING_SOCKET_STATUS","INCOMING_PING_CLIENT","INCOMING_EMIT_HISTORY","INCOMING_GET_SERVER_SETTINGS","INCOMING_CONNECTED_USERS","INCOMING_USER_CONNECTED","INNER_SOCKET_STATUS","outcomingPingEnabled","outcomingImitateUsers","outcomingEmitEvent","outcomingSubscribeOnEvent","outcomingGetServerSettings","outcomingGetConnectedUsers","innerSocketStatus","Settings_style_templateObject","appActions","socketActions","_selectApp","pingEnabled","imitateUsers","Settings_style_Wrapper","checked","selectEventData","Emitter","eventData","selectToolbar","toolbar","schema","object","shape","string","required","default","FeedbackUtils","isArray","join","transform","validateQuery","validateSync","e","Toolbar_Toolbar_style_templateObject","formVisible","setFormVisible","btnClass","visible","non-visible","formClass","Toolbar_Toolbar_style_Wrapper","newEventType","Hint_style_templateObject","Hint","Hint_style_Wrapper","Emitter_style_templateObject","emitEvent","subscribeOnEvent","queryName","onClickSaveAs","onClickSave","showMessageError","onClickNew","Emitter_style_Wrapper","Emitter_Toolbar","enableReinitialize","validateEvent","convertEventData","setTimeout","forms_TextArea","Emitter_Hint","Query_style_templateObject","Query","initValues","okText","onOk","submitForm","onCancel","Query_style_Wrapper","LeftWrapper","Root_style_templateObject","Root","this","appStarted","layouts_MainLayout","containers_Sidebar_Sidebar","containers_Header_Header","layouts_MainContent","row_default","gutter","col_default","span","containers_Emitter_Emitter","containers_Settings_Settings","modals_Query","containers_Footer_Footer","PureComponent","transports","io","CommonUtils","source","addNewKeys","sourceKeys","keys","targetKeys","isImmutable","Immutable","result","cloneDeep","set","initState","combineReducers","safeMerge","compact","appSaga","regenerator_default","wrap","_context","prev","next","put","stop","_marked","_context2","all","takeLatest","_marked2","StorageUtils","localStorage","setItem","JSON","stringify","getItem","parse","storeValue","restoreValue","uuid","select","sent","toConsumableArray","findIndex","push","call","storeQueries","saga_marked","saga_marked2","queriesTypes","_result","_context3","restoreQueries","Set","_marked3","_context4","_marked4","FORMATS","fullDateTime","Formatter","resDate","parseDate","format","MessagesUtils","incomingPing","incomingEmitHistory","incomingConnectedUsers","incomingUserConnected","incomingServerSettings","socketSaga","socket_saga_marked","historyMessage","createPingMessage","socket_saga_marked2","_ref3","createHistoryMessage","selectHistoryEventTypes","saga_marked3","_ref4","users","saga_marked4","_ref5","_ref6","_context5","_marked5","_ref7","settings","subscribeTypes","_context6","selectEmitterEventTypes","_marked6","_context7","takeEvery","_marked7","rootSaga","fork","queriesSaga","sagas_marked","store","sagaMiddleware","createSagaMiddleware","middlewares","createSocketIoMiddleware","composeEnhancers","compose","createStore","reducers","applyMiddleware","apply","run","on","dispatch","rootElement","document","getElementById","ReactDOM","es","containers_Root","navigator","serviceWorker","ready","then","registration","unregister","valuesList","draft","eval"],"mappings":"6NAcoBA,QACU,cAA7BC,OAAOC,SAASC,UAEc,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MAAM,+GCA1B,SAASC,EAAkBC,GAAmB,QAAAC,EAAAC,UAAAC,OAAVC,EAAU,IAAAC,MAAAJ,EAAA,EAAAA,EAAA,KAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAVF,EAAUE,EAAA,GAAAJ,UAAAI,GACpD,OAAO,WAAkB,QAAAC,EAAAL,UAAAC,OAANK,EAAM,IAAAH,MAAAE,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAND,EAAMC,GAAAP,UAAAO,GACxB,IAAMC,EAAS,CAAEV,QAEjB,GAAII,EAASD,OAAS,EAAG,CACxB,IAAMQ,EAAU,GAChBP,EAASQ,QAAQ,SAACC,EAAKC,GACtB,IAAMC,EAAOX,EAASU,GACtBH,EAAQI,GAAQP,EAAKM,KAGtBJ,EAAOC,QAAUA,EAGlB,OAAOD,GC/BT,IAEMM,EAAQ,CACZC,UAAS,GAAAC,OAHI,OAGJ,aACTC,eAAc,GAAAD,OAJD,OAIC,kBACdE,kBAAiB,GAAAF,OALJ,OAKI,sBAWJG,EARFC,OAAAC,EAAA,EAAAD,CAAA,GACRN,EADQ,CAGXQ,SAAmBzB,EAAkBiB,EAAMC,WAC3CQ,aAAmB1B,EAAkBiB,EAAMG,eAAgB,OAC3DO,gBAAmB3B,EAAkBiB,EAAMI,kBAAmB,oBCfnDO,EAAgBL,OAAOM,OAAO,CAC1CC,UAAe,YACfC,aAAe,eACfC,aAAe,kBACfC,MAAe,qBAGHC,EAAgBX,OAAOM,OAAO,CAC1CM,OAAS,SACTC,OAAS,SACTC,MAAS,UAGGC,EAAcf,OAAOM,OAAO,CACxCU,KAAO,OACPC,IAAO,MACPC,KAAO,SCVKC,EAAYC,YACvB,CAJU,SAAAC,GAAK,OAAIA,EAAMC,IAAIC,MAK7B,SAAAA,GAAG,OAAIA,IAGIC,EAAeJ,YAC1B,CARa,SAAAC,GAAK,OAAIA,EAAMC,IAAIG,SAShC,SAAAA,GAAM,OAAIA,OAG2BL,YACtC,CAACI,GACD,SAACC,GAAD,OAAYA,EAAOC,SAAWrB,EAAcE,oBChB9BoB,SAAf,WCAeC,SAAf,uBCAuBC,IAAWC,KAEnBD,EAAf,SCFeE,SAAf,oBCEeC,GAFOA,IAASC,MAEhBD,EAAf,wBCFsBE,IAASC,MAEhBD,EAAf,SCFeE,SAAf,mBCAQC,EAAsCC,IAAtCD,SAEOC,GAF+BA,IAA5BC,SAA4BD,IAAlBE,OAAkBF,IAAVL,MAErBK,EAAf,oBCFQG,EAAmCC,IAAnCD,OAAQE,EAA2BD,IAA3BC,QAASC,EAAkBF,IAAlBE,OAAQC,EAAUH,IAAVG,MAElBH,IAAf,mBCDMI,GADcC,IAAZC,QACSD,IAAKjB,MAEPiB,IAAf,WCHeE,UAAf,YCAeC,WAAf,uBCAQC,GAAWC,KAAXD,OAEOC,MAAf,YCFeC,WAAf,uBCAcC,IAAqBC,KAA3BC,KAA2BD,KAArBD,WAAWG,GAAUF,KAAVE,UAEVF,GAAf,4DCJaG,GAAQ1D,OAAOM,OAAO,CAClCqD,OAAQ,CACPC,OAAQ,GACRC,OAAQ,GACRC,eAAgB,GAChBC,eAAgB,GAChBC,SAAU,IAEXC,OAAQ,CACPC,YAAa,EACbC,YAAa,GAEdC,QAAS,CACRF,YAAa,IAEdG,GAAI,CACHT,OAAQ,UACRC,OAAQ,UACRS,QAAS,UACTJ,YAAa,UACbK,MAAO,WAERC,KAAM,CACLC,KAAM,UACNC,KAAM,UACNC,SAAU,UACVC,YAAa,WAEdC,OAAQ,CACPC,QAAS,UACTJ,KAAM,aAKCK,GAGLrB,GAHHC,OACQqB,GAELtB,GAFHO,OACSgB,GACNvB,GADHU,QAGKF,GAAmBa,GAAEnB,OAASmB,GAAElB,OAAS,EAAImB,GAAEd,YAC/CgB,GAAmBhB,GAAc,EAAIe,GAAEf,YACvCC,GAAmBe,GAAmBH,GAAEjB,eAAiBiB,GAAEf,SAAWgB,GAAEb,YACxEgB,GAAmBD,GAEZE,GAAcpF,OAAOM,OAAO,CACxC4D,eACAgB,oBACAf,eACAgB,kOC7COd,GAAwBX,GAAxBW,GAAIJ,GAAoBP,GAApBO,OAAQG,GAAYV,GAAZU,QAEPzB,GAAU0C,aAAOC,EAAPD,CAAHE,KACRtB,GAAOC,YAEIG,GAAGH,YACIkB,GAAYlB,YAC5BE,GAAQF,aCNhBsB,GAAc,SAAAC,GAAkB,IAAfC,EAAeD,EAAfC,SACtB,OACCC,EAAAC,EAAAC,cAACC,GAAD,KACCH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACbL,KAaLF,GAAYQ,aAAe,CAC1BN,SAAU,MAGIF,ICxBAA,GDwBAA,mGEvBR,IAAM9C,GAAS2C,aAAOY,EAAPZ,CAAHa,MCEbC,GAAa,SAAAV,GAAkB,IAAfC,EAAeD,EAAfC,SACrB,OACCC,EAAAC,EAAAC,cAACO,GAAD,KACEV,IAYJS,GAAWH,aAAe,CACzBN,SAAU,MAGIS,UCtBAA,GDsBAA,eEnBXE,8CAJHC,uCACAC,sCACAC,mCACAC,2BAGKhF,GAAS,CACdiF,SAAWJ,IAAoC,OAC/CK,QAAWJ,IAAmC,YAC9CK,KAAWJ,IAAgC,QAEtCK,GAAsB,GAAAjH,OAAM6B,GAAOiF,SAAb,OAAA9G,OAA2B6B,GAAOkF,QAAlC,KAAA/G,OAA6C6B,GAAOmF,MAC1EE,GAAYL,IAAwB,gDCX3B9E,GCGD,SAACoF,GAQd,OANoBC,cAAc,EAAM,KAAM,CAC7CC,KAAM,CAAEC,QAAS,GACjBC,MAAO,CAAED,QAAS,GAClBE,MAAO,CAAEF,QAAS,KAGAG,IAAI,SAAA5B,GAAA,IAAG6B,EAAH7B,EAAG6B,KAAMC,EAAT9B,EAAS8B,IAAKC,EAAd/B,EAAc+B,MAAd,OACtBF,GACC3B,EAAAC,EAAAC,cAAC4B,GAAA,EAASC,IAAV,CAAcH,IAAKA,EAAKI,MAAOH,GAC9B7B,EAAAC,EAAAC,cAAC+B,EAAab,OCNZc,IAAUC,GAAA,GAAA9H,OAAA+H,GAAA,EAAA/H,CAAA8H,GACdzH,EAAcE,UAAgB,WADhBP,OAAA+H,GAAA,EAAA/H,CAAA8H,GAEdzH,EAAcG,aAAgB,WAFhBR,OAAA+H,GAAA,EAAA/H,CAAA8H,GAGdzH,EAAcI,aAAgB,QAHhBT,OAAA+H,GAAA,EAAA/H,CAAA8H,GAIdzH,EAAcK,MAAgB,SAJhBoH,IAOVE,IAAaC,GAAA,GAAAjI,OAAA+H,GAAA,EAAA/H,CAAAiI,GACjB5H,EAAcE,UAAgB,8BADbP,OAAA+H,GAAA,EAAA/H,CAAAiI,GAEjB5H,EAAcG,aAAgB,iCAFbR,OAAA+H,GAAA,EAAA/H,CAAAiI,GAGjB5H,EAAcI,aAAgB,0CAHbT,OAAA+H,GAAA,EAAA/H,CAAAiI,GAIjB5H,EAAcK,MAAgB,kCAJbuH,ICfJC,GDiDAC,YARE,SAAC9G,GAGjB,MAAO,CACNK,OAHkBF,EAAaH,GAAxBK,SAOMyG,CA3BM,SAAA1C,GAAgB,IAAb/D,EAAa+D,EAAb/D,OAEjBhD,EAAUmJ,GAAWnG,GACrB0G,EAAO,GAAAxI,OAAMoI,GAActG,GAApB,QAAA9B,OAAkCiH,IAE/C,OACClB,EAAAC,EAAAC,cAACwC,GAAD,CACCC,UAAQ,EACRf,IAAK7I,EACLA,KAAMA,EACN0J,QAASA,ME1BNG,GAAiB,SAAA9C,GAAwB,IAArB+C,EAAqB/C,EAArB+C,eACzB,OAAKA,EAAe3J,OAWb2J,EAAenB,IAAI,SAAAoB,GAAQ,IACzBC,EAAkBD,EAAlBC,GACWC,EADOF,EAAdG,UACJC,QAAWF,OAEnB,OACChD,EAAAC,EAAAC,cAACwC,GAAD,CACCC,UAAQ,EACRf,IAAKmB,EACLhK,KAAK,OACL0J,QAASO,MAlBVhD,EAAAC,EAAAC,cAACwC,GAAD,CACCC,UAAQ,EACRf,IAAI,UACJ7I,KAAK,UACL0J,QAAQ,sBA+BZG,GAAevC,aAAe,CAC7BwC,eAAgB,IAGjB,IChDeD,GDyDAJ,YATE,SAAC9G,GAGjB,MAAO,CACNmH,eAH0BhH,EAAaH,GAAhCmH,iBAQML,CAAkBI,oiBEtDzB5E,GAAeD,GAAfC,OAAQU,GAAOX,GAAPW,GAEHyE,GAAUzD,aAAO5C,EAAP4C,CAAH0D,KAMPpF,GAAOC,OACGS,GAAGT,QCKXnB,GAdA,WACd,OACCkD,EAAAC,EAAAC,cAACiD,GAAD,KACCnD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACdJ,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAACmD,GAAD,OAEDrD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SACdJ,EAAAC,EAAAC,cAACoD,GAAD,iaCRItF,GAAeD,GAAfC,OAAQU,GAAOX,GAAPW,GAEHyE,GAAUzD,aAAOzC,EAAPyC,CAAH6D,KAIPvF,GAAOE,OACGQ,GAAGR,QCMXjB,GAbA,WACd,OACC+C,EAAAC,EAAAC,cAACsD,GAAD,KACCxD,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,KAAGuD,KAAK,8BAA8BC,OAAO,SAASC,IAAI,uBAA1D,UACA3D,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,KAAGuD,KAAK,yCAAyCC,OAAO,SAASC,IAAI,uBACpE3D,EAAAC,EAAAC,cAACzD,EAAD,CAAM1D,KAAK,wBCRTgB,GAAQ,CACZ6J,WAAU,GAAA3J,OAHG,WAGH,cACV4J,aAAY,GAAA5J,OAJC,WAID,gBAEZ6J,YAAW,GAAA7J,OANE,WAMF,eACX8J,gBAAe,GAAA9J,OAPF,WAOE,mBAEf+J,eAAc,GAAA/J,OATD,WASC,kBACdgK,iBAAgB,GAAAhK,OAVH,WAUG,qBAgBHG,GAbFC,OAAAC,EAAA,EAAAD,CAAA,GACRN,GADQ,CAGXmK,UAAiBpL,EAAkBiB,GAAM6J,WAAY,SACrDO,YAAiBrL,EAAkBiB,GAAM8J,aAAc,MAEvDO,WAAiBtL,EAAkBiB,GAAM+J,YAAa,WACtDO,eAAiBvL,EAAkBiB,GAAMgK,iBAEzCO,aAAiBxL,EAAkBiB,GAAMiK,eAAgB,SACzDO,eAAiBzL,EAAkBiB,GAAMkK,oBCrBrClK,GAAQ,CACZyK,eAAc,GAAAvK,OAHD,WAGC,kBACdwK,gBAAe,GAAAxK,OAJF,WAIE,mBACfyK,eAAc,GAAAzK,OALD,WAKC,kBACd0K,mBAAkB,GAAA1K,OANL,WAMK,uBAYLG,GATFC,OAAAC,EAAA,EAAAD,CAAA,GACRN,GADQ,CAGX6K,aAAmB9L,EAAkBiB,GAAMyK,eAAgB,aAC3DK,cAAmB/L,EAAkBiB,GAAM0K,gBAAiB,cAC5DK,aAAmBhM,EAAkBiB,GAAM2K,eAAgB,aAC3DK,iBAAmBjM,EAAkBiB,GAAM4K,mBAAoB,sHCXpDK,GAAgBvJ,YAC3B,CAJc,SAAAC,GAAK,OAAIA,EAAMuJ,QAAQC,UAKtC,SAAAA,GAAO,OAAIA,IAGCC,GAAc1J,YAC1B,CARe,SAAAC,GAAK,OAAIA,EAAMuJ,QAAQG,QAStC,SAAAA,GAAK,OAAIA,IAGGC,GAAc,SAACtC,GAA4B,IAAxBuC,EAAwBrM,UAAAC,OAAA,QAAAqM,IAAAtM,UAAA,GAAAA,UAAA,GAAT,KAC9C,OAAOwC,YACN,CAACuJ,IACD,SAACE,GAEA,OADcM,KAAKN,EAAS,CAAEnC,QACduC,wBCrBNG,GAAWpL,OAAOM,OAAO,CACrC+K,KAAS,OACTC,MAAS,QACTC,IAAS,MACTC,OAAS,WAGGC,GAAezL,OAAOM,OAAO,CACzCuK,QAAS,ySCHFxG,GAAqBX,GAArBW,GAAIG,GAAiBd,GAAjBc,KAAMK,GAAWnB,GAAXmB,OAEL6G,GAAgBrG,aAAOzD,EAAPyD,CAAHsG,KAGHtH,GAAGH,YACdM,GAAKC,KACMI,GAAOC,SCFxB8G,IAAKC,GAAA,GAAA7L,OAAA+H,GAAA,EAAA/H,CAAA6L,GACTlL,EAAcC,OAAS,OADdZ,OAAA+H,GAAA,EAAA/H,CAAA6L,GAETlL,EAAcE,OAAS,UAFdb,OAAA+H,GAAA,EAAA/H,CAAA6L,GAGTlL,EAAcG,MAAQ,QAHb+K,ICRIjK,GDcA,SAAA6D,GAAwB,IAArB/G,EAAqB+G,EAArB/G,KAAMoN,EAAerG,EAAfqG,SACjB/F,EAAYgG,KAAW,CAC5BV,KAASS,IAAaV,GAASC,KAC/BC,MAASQ,IAAaV,GAASE,QAGhC,OACC3F,EAAAC,EAAAC,cAAC6F,GAAD,CACCM,KAAM,GACNC,KAAML,GAAMlN,GACZqH,UAAWA,EACXmG,MAAOC,KAAWzN,eEtBf0N,GAAc,CAAEC,SAAU,SAE1BC,GAAkBC,qBAAW,SAAC/E,EAAOgF,GAAQ,IAC1CC,EAAqDjF,EAArDiF,WAAYC,EAAyClF,EAAzCkF,MAAO/E,EAAkCH,EAAlCG,MAAOgF,EAA2BnF,EAA3BmF,SAAaC,EADG5M,OAAA6M,GAAA,EAAA7M,CACWwH,EADX,2CAE5CsF,EAAQ9M,OAAAC,EAAA,EAAAD,CAAA,GAAQoM,GAAgBzE,GAEhCoF,EAAUN,EAAWpF,IAAI,SAAA3I,GAAI,OAClCiH,EAAAC,EAAAC,cAAC1C,GAAD,CAAQoE,IAAK7I,EAAMgO,MAAOhO,GAAOA,KAGlC,OACCiH,EAAAC,EAAAC,cAACmH,GAADhN,OAAAiN,OAAA,CACCT,IAAKA,EACLE,MAAOA,EACP/E,MAAOmF,EACPH,SAAUA,GACNC,GAEHG,KAYJT,GAAgBtG,aAAe,CAC9ByG,WAAa,GACbC,MAAa,GACb/E,MAAa,GACbgF,SAAa,iUCpCNhJ,GAAqBD,GAArBC,OAAQU,GAAaX,GAAbW,GAAIG,GAASd,GAATc,KAEPsE,GAAUzD,KAAOqC,IAAVwF,KAIRvJ,GAAOC,OACGS,GAAGC,QACdE,GAAKG,UCTDwI,GCGF,SAAA1H,GAAmB,IAAhB2H,EAAgB3H,EAAhB2H,UAEf,OACCzH,EAAAC,EAAAC,cAACwH,GAAD,KAAUD,EAAY,KAAO,eCAzBE,GAAc,SAAA7H,GAAsD,IAAnDiD,EAAmDjD,EAAnDiD,GAAIjJ,EAA+CgG,EAA/ChG,KAAMf,EAAyC+G,EAAzC/G,KAAMuN,EAAmCxG,EAAnCwG,KAAMmB,EAA6B3H,EAA7B2H,UAAWtD,EAAkBrE,EAAlBqE,YAOvD,OACCnE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACbkG,GAAQtG,EAAAC,EAAAC,cAACzD,EAAD,CAAM1D,KAAMuN,IACpBvN,GAAQiH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OAAOmG,MAAOxN,GAAOA,IAC3C0O,GAAazH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QAAQtG,IACnC2N,GAAa1O,GAASiH,EAAAC,EAAAC,cAACzD,EAAD,CAAM1D,KAAK,QAAQqH,UAAU,SAASwH,QAV3C,SAACC,GACtBA,EAAMC,kBACN3D,EAAYpB,QAsBd4E,GAAYtH,aAAe,CAC1BtH,KAAM,GACNuN,KAAM,IAGP,IAAMyB,GAAa,CAClB5D,YAAe6D,GAAe7D,aAGhB3B,eACd,KACAuF,GAFcvF,CAGbmF,miCC3CM9I,GAASd,GAATc,KAEKsE,GAAUzD,KAAOqC,IAAVkG,KAgBRpJ,GAAKI,YAwBHJ,GAAKG,kBCwDb+I,ICnGoBG,SAAgB,CACzCnF,GAAOmF,UAAiBC,WACxBrO,KAAOoO,UAAiBC,WACxBpP,KAAOmP,UAAiBC,WACxBC,KAAOF,UAAiBC,aD+FN,CAClB7D,aAAmB0D,GAAe1D,aAClCS,iBAAmBsD,GAAetD,iBAClCH,aAAmByD,GAAezD,eAGpBpC,eAdE,SAAC9G,GAEjB,MAAO,CACN4M,QAFmBnD,GAAYzJ,GAAxB4M,QAGPpD,QAASF,GAActJ,KAYxBqM,GAFcvF,CA1FC,SAACX,GAAU,IAEzByG,EAKGzG,EALHyG,QACApD,EAIGrD,EAJHqD,QACAZ,EAGGzC,EAHHyC,aACAS,EAEGlD,EAFHkD,iBACAH,EACG/C,EADH+C,aANyB2D,EASQC,oBAAS,GATjBC,EAAApO,OAAAqO,GAAA,EAAArO,CAAAkO,EAAA,GASnBd,EATmBgB,EAAA,GASRE,EATQF,EAAA,GAsBpBG,GAAW1D,EAAQhM,QACxB8G,EAAAC,EAAAC,cAAC/C,EAAD,CAAUyE,IAAI,KACb5B,EAAAC,EAAAC,cAAC2I,GAAD,CACC9F,GAAG,IACHjJ,KAAK,mBACLwM,KAAK,cACLmB,UAAWA,KAKRqB,EAAY5D,EAAQxD,IAAI,SAAAC,GAAI,OACjC3B,EAAAC,EAAAC,cAAC/C,EAAD,CAAUyE,IAAKD,EAAKoB,IACnB/C,EAAAC,EAAAC,cAAC2I,GAAD,CACC9F,GAAIpB,EAAKoB,GACTjJ,KAAM6H,EAAK7H,KACXf,KAAM4I,EAAK5I,KACX0O,UAAWA,OAKd,OACCzH,EAAAC,EAAAC,cAAChD,EAAD,CACC6L,aAAW,EACXC,MAAO,IACPvB,UAAWA,EACXwB,WAAY,kBAAMN,GAAclB,KAEhCzH,EAAAC,EAAAC,cAACgJ,GAAD,KACClJ,EAAAC,EAAAC,cAACiJ,GAAD,CAAM1B,UAAWA,IACjBzH,EAAAC,EAAAC,cAAC9C,EAAD,CACCgM,MAAM,OACNC,KAAK,SACLC,aAAc,CAAChB,GACfiB,SA9Ca,SAAAzJ,GAAa,IAAV8B,EAAU9B,EAAV8B,IACnB,GAAY,MAARA,EAAJ,CAGA,IAAM4H,EAAQhE,KAAKN,EAAS,CAAEnC,GAAInB,IAElCmD,EAAiB,CAAE0E,UAAWD,EAAMzQ,OACpC6L,EAAa4E,EAAMpB,MACnB9D,EAAa,CAAEgE,QAAS1G,OAwCpBgH,EACAE,gBEzEA/O,GAAQ,CACZ2P,YAAW,GAAAzP,OAHE,WAGF,eACX0P,eAAc,GAAA1P,OAJD,WAIC,kBAEdyK,eAAc,GAAAzK,OAND,WAMC,kBACd2P,kBAAiB,GAAA3P,OAPJ,WAOI,qBAEjB4P,gBAAe,GAAA5P,OATF,WASE,mBACf6P,kBAAiB,GAAA7P,OAVJ,WAUI,sBAgBJG,GAbFC,OAAAC,EAAA,EAAAD,CAAA,GACRN,GADQ,CAGXgQ,WAAkBjR,EAAkBiB,GAAM2P,YAAa,WACvDM,cAAkBlR,EAAkBiB,GAAM4P,gBAE1C7E,aAAkBhM,EAAkBiB,GAAM2K,eAAgB,aAC1DuF,gBAAkBnR,EAAkBiB,GAAM6P,mBAE1CM,cAAkBpR,EAAkBiB,GAAM8P,gBAAiB,UAC3DM,gBAAkBrR,EAAkBiB,GAAM+P,8BCjB/BM,GAAiB3O,YAC5B,CALiB,SAACC,GAAD,OAAWA,EAAM2O,QAAQC,WAM3C,SAAAA,GAAQ,OAAIA,IAUAC,GAAmB9O,YAC/B,CAhBkB,SAACC,GAAD,OAAWA,EAAM2O,QAAQvD,aAiB3C,SAAAA,GAAU,OAAIA,IAGF0D,GAAuB/O,YACnC,CAAC8O,IACD,SAAAzD,GAAU,OAAI2D,KAAgBC,oBAAoB5D,KAGtC6D,GAAelP,YAC3B,CAzBkB,SAACC,GAAD,OAAWA,EAAM2O,QAAQO,SA0B3C,SAAAA,GAAM,OAAIA,IAGEC,GAAyBpP,YACrC,CAAC2O,GAAgBO,IACjB,SAACL,EAAUM,GAAW,IACbnB,EAAoBmB,EAApBnB,UAAW5K,EAAS+L,EAAT/L,KACbgJ,EAAU4B,GAAaqB,OAAOrB,GAAWsB,OACzCtI,EAAU5D,GAAQiM,OAAOjM,GAAMkM,OAErC,OAAOT,EAASM,OAAO,SAAAjJ,GACtB,QACE8H,GAAY9H,EAAKkG,QAAUA,MACxBhJ,GAAO8C,EAAKc,QAAQuI,SAASvI,QCxBxBpC,IAlBC6H,UACAA,aAAoB,CAACA,UAAkBA,YACvCA,QACAA,QAENA,SAAgB,CACtBpO,KAAWoO,UAAiBC,WAC5BpB,MAAWmB,aAAoB,CAACA,UAAkBA,UAAkBA,cAAqB+C,QACzFjE,SAAWkB,QACXgD,OAAWhD,UAGNA,SAAgB,CACrBiD,QAAWjD,UACXkD,OAAYlD,YAIc,CAC3BmD,MAAa,GACbC,WAAa,GACbC,SAAa,EACbC,WAAa,EAEbC,MAAO,CACN1E,MAAW,IAGZ2E,KAAM,CACLP,QAAW,GACXC,OAAW,0HC/BN,IAAMjI,GAAUzD,KAAOqC,IAAV4J,MCIdC,GAAU,SAAA9L,GAA0D,IAAvDuL,EAAuDvL,EAAvDuL,MAAOC,EAAgDxL,EAAhDwL,WAAYC,EAAoCzL,EAApCyL,QAASC,EAA2B1L,EAA3B0L,UAAWK,EAAgB/L,EAAhB+L,UAGnDC,EAAS,CACd9C,MAFiC,kBAAfsC,EAAR,GAAArR,OAAsCqR,EAAtC,KAAsDA,EAGhES,YAAcP,EAAa,EAAI,GAE1BQ,EAAS,CAAEhD,MAAQwC,EAAa,OAAS,QAE/C,OACCxL,EAAAC,EAAAC,cAAC+L,GAAD,CAASjK,MAAOgK,EAAQ5L,UAAU,eAC/BmL,GACDvL,EAAAC,EAAAC,cAAA,QAAME,UAAU,QAAQ4B,MAAO8J,GAAST,GAExCQ,IAaJD,GAAQvL,aAAe,CACtBgL,MAAahL,GAAagL,MAC1BC,WAAajL,GAAaiL,WAC1BC,QAAalL,GAAakL,QAC1BC,UAAanL,GAAamL,WAGZI,UClCTjP,GAAQ,SAACkF,GAAU,IAEvBwJ,EAOGxJ,EAPHwJ,MACAC,EAMGzJ,EANHyJ,WACAC,EAKG1J,EALH0J,QACAC,EAIG3J,EAJH2J,UACAC,EAGG5J,EAHH4J,MAEGxE,GACApF,EAFH6J,KAPuBrR,OAAA6M,GAAA,EAAA7M,CASpBwH,EAToB,8DAWxB,OACC7B,EAAAC,EAAAC,cAACgM,GAAD,CACCb,MAAOA,EACPC,WAAYA,EACZC,QAASA,EACTC,UAAWA,EACXK,UACC7L,EAAAC,EAAAC,cAACiM,EAAD9R,OAAAiN,OAAA,GACKmE,EACAxE,OAWTtK,GAAM0D,aAANhG,OAAAC,EAAA,EAAAD,CAAA,GACIgG,IAGW1D,ICvCAA,GDuCAA,GElCT8J,GAAc,CAAEC,SAAU,SAE1BjJ,GAAS,SAACoE,GAAU,IAExBwJ,EASGxJ,EATHwJ,MACAC,EAQGzJ,EARHyJ,WACAC,EAOG1J,EAPH0J,QACAC,EAMG3J,EANH2J,UACAC,EAKG5J,EALH4J,MAEArE,GAGGvF,EAJH6J,KAIG7J,EAHHuF,SACApF,EAEGH,EAFHG,MACGiF,EAVqB5M,OAAA6M,GAAA,EAAA7M,CAWrBwH,EAXqB,+EAanBsF,EAAQ9M,OAAAC,EAAA,EAAAD,CAAA,GAAQoM,GAAgBzE,GAEhCoK,EAAchF,EAAQ1F,IAAI,SAAA5B,GAAA,IAAGiH,EAAHjH,EAAGiH,MAAOR,EAAVzG,EAAUyG,MAAV,OAC/BvG,EAAAC,EAAAC,cAAC1C,GAAD,CAAQoE,IAAKmF,EAAOA,MAAOA,GAAQR,KAcpC,OACCvG,EAAAC,EAAAC,cAACgM,GAAD,CACCb,MAAOA,EACPC,WAAYA,EACZC,QAASA,EACTC,UAAWA,EACXK,UACC7L,EAAAC,EAAAC,cAACmH,GAADhN,OAAAiN,OAAA,GACKmE,EACAxE,EAFL,CAGCjF,MAAOmF,EACPH,SAtBkB,SAACD,GAEtB,IAAMc,EAAQ,CACbnE,OAAQ,CACP5J,KAAM2R,EAAM3R,KACZiN,UAGF0E,EAAMzE,SAASa,MAgBXuE,MAgBN3O,GAAO4C,aAAPhG,OAAAC,EAAA,EAAAD,CAAA,GACIgG,GADJ,CAEC+G,QAAU,GACVpF,MAAU,KAGIvE,ICxEAA,GDwEAA,GEnETf,GAAW,SAACmF,GAAU,IAE1BwJ,EASGxJ,EATHwJ,MACAC,EAQGzJ,EARHyJ,WACAC,EAOG1J,EAPH0J,QACAC,EAMG3J,EANH2J,UACAC,EAKG5J,EALH4J,MAEAY,GAGGxK,EAJH6J,KAIG7J,EAHHwK,MACAC,EAEGzK,EAFHyK,cACGrF,EAVuB5M,OAAA6M,GAAA,EAAA7M,CAWvBwH,EAXuB,oFAkB3B,OACC7B,EAAAC,EAAAC,cAACgM,GAAD,CACCb,MAAOA,EACPC,WAAYA,EACZC,QAASA,EACTC,UAAWA,EACXK,UACC7L,EAAAC,EAAAC,cAACqM,EAADlS,OAAAiN,OAAA,CACC+E,KAAMA,GACFZ,EACAxE,EAHL,CAICD,SAhBa,SAACa,GACjByE,EAAczE,EAAMnE,OAAOqD,OAC3B0E,EAAMzE,SAASa,UA2BjBnL,GAAS2D,aAAThG,OAAAC,EAAA,EAAAD,CAAA,GACIgG,GADJ,CAECgM,KAAgB,GAChBC,cAAgB,eAGF5P,ICrDAA,GDqDAA,4iBEpDPsB,GAAWD,GAAXC,OAEKmF,GAAUzD,KAAOqC,IAAVyK,KAIRxO,GAAOG,gBCIbsO,GAAgB,CACrBhD,UAAY,GACZ5K,KAAY,IAGP6N,GAAU,SAAA5M,GAAmE,IAAhEgH,EAAgEhH,EAAhEgH,WAAYkD,EAAoDlK,EAApDkK,cAAeE,EAAqCpK,EAArCoK,cAAeC,EAAsBrK,EAAtBqK,gBAEtDwC,EAAUC,iBAAO,IAOjBC,EAAU,WACXF,EAAQG,QAAQC,WACnBJ,EAAQG,QAAQC,YAEjB5C,KAQD,OACCnK,EAAAC,EAAAC,cAAC8M,GAAD,KACChN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACdJ,EAAAC,EAAAC,cAAC+M,GAAA,EAAD,CACCR,cAAeA,GACfS,SAtBa,SAACC,EAAQ/S,GACzB8P,EAAciD,GACd/S,EAAQgT,eAAc,IAqBnBC,OAAQ,SAAAC,GAAiC,IAA9BC,EAA8BD,EAA9BC,aAAcR,EAAgBO,EAAhBP,UAGxB,OAFAJ,EAAQG,QAAQC,UAAYA,EAG3B/M,EAAAC,EAAAC,cAAC+M,GAAA,EAAD,KACCjN,EAAAC,EAAAC,cAAC+M,GAAA,EAAD,CACCnT,KAAK,YACLuT,OAAQ,SAACG,GAAD,OACPxN,EAAAC,EAAAC,cAACuN,GAADpT,OAAAiN,OAAA,CACCkE,WAAS,EACTH,MAAM,SACNjE,QAASN,GACL0G,OAIPxN,EAAAC,EAAAC,cAAC+M,GAAA,EAAD,CACCnT,KAAK,OACLuT,OAAQ,SAACG,GAAD,OACPxN,EAAAC,EAAAC,cAACwN,GAADrT,OAAAiN,OAAA,CACCiE,SAAO,EACPC,WAAS,EACTmC,YAAY,uBACRH,OAIPxN,EAAAC,EAAAC,cAAC9D,EAAD,CACCrD,KAAK,UACL6U,SAAS,SACTtH,KAAK,SACLC,MAAM,SACNsH,SAAUN,IAEXvN,EAAAC,EAAAC,cAAC9D,EAAD,CACCwR,SAAS,SACTtH,KAAK,QACLC,MAAM,aACNsH,SAAUN,EACV3F,QAASiF,SAOf7M,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SACdJ,EAAAC,EAAAC,cAAC9D,EAAD,CACCkK,KAAK,SACLC,MAAM,gBACNqB,QA7DY,WACfoC,IACA6C,MAwDE,YAYJH,GAAQoB,YAAc,iBAkBtB,IAOM/F,GAAa,CAClBiC,cAAkB+D,GAAe/D,cACjCE,cAAkB6D,GAAe7D,cACjCC,gBAAkB4D,GAAe5D,iBClInBuC,GDqIAlK,YAbE,SAAC9G,GACjB,MAAO,CACNoL,WAAa0D,GAAqB9O,GAClCkP,OAAaD,GAAajP,KAY3BqM,GAFcvF,CAGbkK,+uCEvIMhO,GAAeX,GAAfW,GAAIQ,GAAWnB,GAAXmB,OAECiE,GAAUzD,KAAOqC,IAAViM,KAaEtP,GAAGH,YAEHW,GAAOC,QASNT,GAAGH,YAkBDW,GAAOC,QACLD,GAAOC,QAURD,GAAOC,QACTD,GAAOC,SC7CzB8O,GAAW,CAAE5B,KAAM,EAAG6B,YAAY,GCZzB5Q,GD6EAkF,YAZE,SAAC9G,EAAOmG,GAExB,IdxD6BkB,EcwDvBN,GdxDuBM,EcwDClB,EAAMkB,GdvD7BtH,YACN,CAAC2O,IACD,SAACE,GAAD,OAAc9E,KAAK8E,EAAU,CAAEvH,UcqDQrH,GAExC,MAAO,CACN3C,KAAS0J,EAAQ1J,KACjBqP,KAAS3F,EAAQ2F,KACjB+F,KAAS1L,EAAQ0L,KACjBC,OAAS3L,EAAQ2L,SAIJ5L,CA/DC,SAAA1C,GAAsC,IAAnCiD,EAAmCjD,EAAnCiD,GAAIhK,EAA+B+G,EAA/B/G,KAAMqP,EAAyBtI,EAAzBsI,KAAM+F,EAAmBrO,EAAnBqO,KAAMC,EAAatO,EAAbsO,OAElCjI,EAAYiI,IAAWpT,EAAcG,MAASsK,GAASE,MAAQF,GAASC,KAExE2I,EAAajI,KAAW,gBAAiB,CAC9CV,KAASS,IAAaV,GAASC,KAC/BC,MAASQ,IAAaV,GAASE,QAE1B2I,EAAelI,KAAW,UAAW,CAC1CV,KAASS,IAAaV,GAASC,KAC/BC,MAASQ,IAAaV,GAASE,QAShC,OANoBtE,cAAc,EAAM,KAAM,CAC7CC,KAAM,CAAEC,QAAS,GACjBC,MAAO,CAAED,QAAS,GAClBE,MAAO,CAAEF,QAAS,KAGAG,IAAI,SAAA4L,GAAA,IAAG3L,EAAH2L,EAAG3L,KAAMC,EAAT0L,EAAS1L,IAAKC,EAAdyL,EAAczL,MAAd,OACtBF,GACC3B,EAAAC,EAAAC,cAAC4B,GAAA,EAASC,IAAV,CAAcH,IAAKA,EAAKI,MAAOH,GAC9B7B,EAAAC,EAAAC,cAACqO,GAAD,CAASnO,UAAWiO,EAAYzM,IAAKmB,GACpC/C,EAAAC,EAAAC,cAACsO,GAAD,CACCzV,KAAMqV,EACNjI,SAAUA,IAEXnG,EAAAC,EAAAC,cAAA,OAAKE,UAAWkO,GACftO,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACdJ,EAAAC,EAAAC,cAACvC,GAAD,CAAWsQ,SAAUA,GAAUQ,UAAQ,GACrCrG,IAGHpI,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACdJ,EAAAC,EAAAC,cAACxC,GAAD,KAAMyQ,GACNnO,EAAAC,EAAAC,cAACxC,GAAD,CAAKgR,MAAM,YAAY3V,8YEhDtB2F,GAAuBX,GAAvBW,GAAIQ,GAAmBnB,GAAnBmB,OAAQZ,GAAWP,GAAXO,OAEP6E,GAAUzD,KAAOqC,IAAV4M,KAMSlP,GAAYjB,YACZiB,GAAYjB,YACnBE,GAAGE,MACTN,GAAOE,YAGDU,GAAOC,SCRvByP,GAAO,SAAA9O,GAAkB,IAExB+O,EAFwB/O,EAAfwK,SAEQ5I,IAAI,SAAA4L,GAAA,IAAGvK,EAAHuK,EAAGvK,GAAH,OAC1B/C,EAAAC,EAAAC,cAAC4O,GAAD,CAAS/L,GAAIA,EAAInB,IAAKmB,MAGvB,OACC/C,EAAAC,EAAAC,cAAC6O,GAAD,KACEF,IASJD,GAAKvO,aAAe,CACnBiK,SAAU,IAGX,IC5BesE,GDmCApM,YAPE,SAAC9G,GAEjB,MAAO,CACN4O,SAAUO,GAAuBnP,KAIpB8G,CAAkBoM,2KEjCzBlQ,GAAOX,GAAPW,GAEKyE,GAAUzD,aAAO3C,EAAP2C,CAAHsP,KAEGtQ,GAAGH,YACIkB,GAAYF,kBCQ3B0P,GAVU,WACxB,OACCjP,EAAAC,EAAAC,cAACgP,GAAD,KACClP,EAAAC,EAAAC,cAACpC,GAAD,CAAOqR,MAAO,GAAd,kBACAnP,EAAAC,EAAAC,cAACkP,GAAD,MACApP,EAAAC,EAAAC,cAACmP,GAAD,QCNGtV,GAAQ,CACZuV,uBAAsB,GAAArV,OALA,iBAKA,gBACtBsV,wBAAuB,GAAAtV,OAND,iBAMC,iBACvBuV,qBAAoB,GAAAvV,OAPE,iBAOF,cACpBwV,6BAA4B,GAAAxV,OARN,iBAQM,sBAC5ByV,8BAA6B,GAAAzV,OATP,iBASO,uBAC7B0V,8BAA6B,GAAA1V,OAVP,iBAUO,uBAE7B2V,uBAAsB,GAAA3V,OAXA,iBAWA,iBACtB4V,qBAAoB,GAAA5V,OAZE,iBAYF,QACpB6V,sBAAqB,GAAA7V,OAbC,iBAaD,gBACrB8V,6BAA4B,GAAA9V,OAdN,iBAcM,uBAC5B+V,yBAAwB,GAAA/V,OAfF,iBAeE,mBACxBgW,wBAAuB,GAAAhW,OAhBD,iBAgBC,kBAEvBiW,oBAAmB,GAAAjW,OAjBD,gBAiBC,kBAgBNG,GAbFC,OAAAC,EAAA,EAAAD,CAAA,GACRN,GADQ,CAGXoW,qBAA6BrX,EAAkBiB,GAAMuV,uBAAwB,eAC7Ec,sBAA6BtX,EAAkBiB,GAAMwV,wBAAyB,gBAC9Ec,mBAA6BvX,EAAkBiB,GAAMyV,qBAAsB,OAAQ,QACnFc,0BAA6BxX,EAAkBiB,GAAM0V,6BAA8B,QACnFc,2BAA6BzX,EAAkBiB,GAAM2V,+BACrDc,2BAA6B1X,EAAkBiB,GAAM4V,+BAErDc,kBAA6B3X,EAAkBiB,GAAMmW,oBAAqB,yGChCrE,IAAM/M,GAAUzD,KAAOqC,IAAV2O,MCkEd3I,GAAa,CAClBvN,aAAwBmW,EAAWnW,aACnC2V,qBAAwBS,GAAcT,qBACtCC,sBAAwBQ,GAAcR,uBAGxB5N,eAfE,SAAC9G,GAAU,IAAAmV,EACWrV,EAAUE,GAEhD,MAAO,CACNoV,YAJ0BD,EACnBC,YAIPC,aAL0BF,EACNE,eAgBrBhJ,GAFcvF,CA9DE,SAACX,GAAU,IAE1BiP,EAKGjP,EALHiP,YACAC,EAIGlP,EAJHkP,aACAvW,EAGGqH,EAHHrH,aACA2V,EAEGtO,EAFHsO,qBACAC,EACGvO,EADHuO,sBAaD,OACCpQ,EAAAC,EAAAC,cAAC8Q,GAAD,KACChR,EAAAC,EAAAC,cAACpC,GAAD,CAAOqR,MAAO,GAAd,YACAnP,EAAAC,EAAAC,cAAC7D,EAAD,CACC4U,QAASH,EACT9J,SAfyB,WAC3BxM,EAAa,CAAEsW,aAAcA,IAC7BX,GAAsBW,KAWrB,kCAMA9Q,EAAAC,EAAAC,cAAC7D,EAAD,CACC4U,QAASF,EACTlD,UAAWiD,EACX9J,SAjB0B,WAC5BxM,EAAa,CAAEuW,cAAeA,IAC9BX,GAAuBW,KAYtB,0CCjCUG,GAAkBzV,YAC7B,CALiB,SAACC,GAAD,OAAWA,EAAMyV,QAAQC,YAM3C,SAAAA,GAAS,OAAIA,IAGD7G,GAAmB9O,YAC/B,CATkB,SAACC,GAAD,OAAWA,EAAMyV,QAAQrK,aAU3C,SAAAA,GAAU,OAAIA,IAGF0D,GAAuB/O,YACnC,CAAC8O,IACD,SAAAzD,GAAU,OAAI2D,KAAgBC,oBAAoB5D,KAGtCuK,GAAgB5V,YAC5B,CAlBkB,SAACC,GAAD,OAAWA,EAAMyV,QAAQG,UAmB3C,SAAAA,GAAO,OAAIA,aCtBNC,GAASC,oBAASC,MAAM,CAC7BhI,UAAWiI,oBAASC,SAAS,4BAC7BP,UAAWM,oBAASE,QAAQ,iBAAM,WCF7BC,0GAEYvH,GAChB,OAAKlR,MAAM0Y,QAAQxH,GAIZA,EAASyH,KAAK,MAHbzH,2CAMe7H,GACvBnF,GAAQvC,MAAM8W,EAAcG,UAAUvP,GAAU,YCX5C8O,GAASC,oBAASC,MAAM,CAC7B3X,KAAM4X,oBAASC,SAAS,yCACxB5Y,KAAM2Y,oBAASC,SAAS,yCACxBvJ,KAAMsJ,oBAASC,SAAS,2CAGlB,SAASM,GAAczI,GAE7B,IACC+H,GAAOW,aAAa1I,GACnB,MAAO2I,GACR,OAAOA,EAAE/G,OAGV,OAAO,srBCbApN,GAAWD,GAAXC,OAEKmF,GAAUzD,KAAOqC,IAAVqQ,KAIRpU,GAAOI,gBCKbsO,GAAU,SAAA5M,GAA+D,IAA5D2J,EAA4D3J,EAA5D2J,UAAW3C,EAAiDhH,EAAjDgH,WAAY/B,EAAqCjF,EAArCiF,iBAAkBD,EAAmBhF,EAAnBgF,aAAmByD,EAExCC,oBAAS,GAF+BC,EAAApO,OAAAqO,GAAA,EAAArO,CAAAkO,EAAA,GAEvE8J,EAFuE5J,EAAA,GAE1D6J,EAF0D7J,EAAA,GAmBxE8J,EAAWnM,KAAW,CAC3BoM,SAAYH,EACZI,cAAeJ,IAEVK,EAAYtM,KAAW,QAAS,CACrCoM,QAAWH,EACXI,eAAgBJ,IAGjB,OACCrS,EAAAC,EAAAC,cAACyS,GAAD,KACC3S,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACdJ,EAAAC,EAAAC,cAACuN,GAAD,CACCjC,WAAS,EACTH,MAAM,SACNjE,QAASN,EACT2E,MAAO,CACN3R,KAAM,YACNiN,MAAO0C,EACPzC,SAxBqB,SAACa,GAAU,IAClBd,EAAYc,EAAtBnE,OAAUqD,MAClBhC,EAAiB,CAAE0E,UAAW1C,QAyB5B/G,EAAAC,EAAAC,cAAC9D,EAAD,CACCrD,KAAK,UACLuN,KAAK,OACLC,MAAM,gBACNnG,UAAWmS,EACX3K,QAAS,kBAAM0K,GAAe,OAGhCtS,EAAAC,EAAAC,cAAA,OAAKE,UAAWsS,GACf1S,EAAAC,EAAAC,cAAC+M,GAAA,EAAD,CACCR,cAAe,CAAEmG,aAAc,IAC/B1F,SAhDa,SAACC,EAAQ/S,GAAY,IAC7BwY,EAAiBzF,EAAjByF,aAER9N,EAAa8N,GACbN,GAAe,GACfvN,EAAiB,CAAE0E,UAAWmJ,IAE9BxY,EAAQgT,eAAc,IA0CnBC,OAAQ,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,aAAH,OACPvN,EAAAC,EAAAC,cAAC+M,GAAA,EAAD,KACCjN,EAAAC,EAAAC,cAAC+M,GAAA,EAAD,CACCnT,KAAK,eACLuT,OAAQ,SAACxL,GAAD,OAAY7B,EAAAC,EAAAC,cAACwN,GAADrT,OAAAiN,OAAA,GAAWzF,EAAX,CAAkB8L,YAAY,wBAEnD3N,EAAAC,EAAAC,cAAC9D,EAAD,CACCrD,KAAK,UACL6U,SAAS,SACTtH,KAAK,QACLC,MAAM,iBACNsH,SAAUN,WAUlBb,GAAQoB,YAAc,iBAatBpB,GAAQrM,aAAe,CACtBoJ,UAAW,IAGZ,IASM1B,GAAa,CAClBjD,aAAmBuD,GAAevD,aAClCC,iBAAmBsD,GAAetD,kBClHpB2H,GDqHAlK,YAdE,SAAC9G,GAGjB,MAAO,CACN+N,UAHqB4H,GAAc3V,GAA5B+N,UAIP3C,WAAY0D,GAAqB9O,KAWlCqM,GAFcvF,CAGbkK,oQEvHM7N,GAAiBd,GAAjBc,KAAMK,GAAWnB,GAAXmB,OAEDiE,GAAUzD,KAAOqC,IAAV8Q,KAGThU,GAAKE,KACMG,GAAOC,QACFD,GAAOH,MCRnB+T,GCCF,WACZ,OACC9S,EAAAC,EAAAC,cAAC6S,GAAD,omBCHK,IAAM5P,GAAUzD,KAAOqC,IAAViR,MC6MdjL,GAAa,CAClBnD,aAAmByD,GAAezD,aAClCG,iBAAmBsD,GAAetD,iBAClCkO,UAAmBrC,GAAcP,mBACjC6C,iBAAmBtC,GAAcN,0BACjChM,aAAmB0D,GAAe1D,aAClCJ,UAAmB8D,GAAe9D,WAGpB1B,eArBE,SAAC9G,GAAU,IACnB+N,EAAc4H,GAAc3V,GAA5B+N,UACAnB,EAAYnD,GAAYzJ,GAAxB4M,QAER,MAAO,CACNmB,YACAnB,UACA6K,UAAW9N,GAAYiD,EAAS,IAAIxO,KACpCsX,UAAWF,GAAgBxV,KAe5BqM,GAFcvF,CAjMC,SAACX,GAAU,IAEzB4H,EAUG5H,EAVH4H,UACA2H,EASGvP,EATHuP,UACA9I,EAQGzG,EARHyG,QACA6K,EAOGtR,EAPHsR,UACAvO,EAMG/C,EANH+C,aACAG,EAKGlD,EALHkD,iBACAkO,EAIGpR,EAJHoR,UACAC,EAGGrR,EAHHqR,iBACA5O,EAEGzC,EAFHyC,aACAJ,EACGrC,EADHqC,UAGKyI,EAAUC,iBAAO,IAwBjBwG,EAAgB,WAAM,IACnBhC,EAAczE,EAAQG,QAAQK,OAA9BiE,UASR9M,EARc,CACbgE,QAAU,GACVvP,KAAU0Q,EACVrB,KAAUgJ,EACVtX,KAAU,GACV0Y,SAAU,KAMNa,EAAc,WACnB,GAAK/K,EAAL,CADyB,IAMjB8I,EAAczE,EAAQG,QAAQK,OAA9BiE,UACF5H,EAAQ,CACbzQ,KAAO0Q,EACPrB,KAAOgJ,EACPtX,KAAOqZ,EACPpQ,GAAOuF,GAGF8C,EAAS6G,GAAczI,GACzB4B,EACHyG,GAAcyB,iBAAiBlI,GAIhClH,EAAUsF,QAlBT4J,KAsBIG,EAAa,WAClB3O,EAAa,IACbG,EAAiB,CAAE0E,UAAW,KAC9BnF,EAAa,CAAEgE,QAAS,MAGzB,OACCtI,EAAAC,EAAAC,cAACsT,GAAD,KACCxT,EAAAC,EAAAC,cAACpC,GAAD,CAAOqR,MAAO,GAAd,eACAnP,EAAAC,EAAAC,cAACuT,GAAD,MACAzT,EAAAC,EAAAC,cAAC+M,GAAA,EAAD,CACCyG,oBAAkB,EAClBjH,cAAe,CAAE2E,aACjBlE,SAxEc,SAACC,EAAQ/S,GAAY,IAC7BgX,EAAcjE,EAAdiE,UACFhG,EVlCD,SAAuB3B,EAAW2H,GAExC,IACCG,GAAOW,aAAa,CAAEzI,YAAW2H,cAChC,MAAOe,GACR,OAAOA,EAAE/G,OAGV,OAAO,KU0BSuI,CAAclK,EAAW2H,GACxC,GAAIhG,EAGH,OAFAyG,GAAcyB,iBAAiBlI,QAC/BhR,EAAQgT,eAAc,GAIvBxI,EAAawM,GAETA,EACH6B,EAAUxJ,EAAWgB,KAAgBmJ,iBAAiBxC,IAEtD8B,EAAiBzJ,GAGlBoK,WAAW,WACVzZ,EAAQgT,eAAc,IACpB,MAsDDC,OAAQ,SAAAvN,GAA8B,IAA3ByN,EAA2BzN,EAA3ByN,aAAcJ,EAAarN,EAAbqN,OAGxB,OAFAR,EAAQG,QAAQK,OAASA,EAGxBnN,EAAAC,EAAAC,cAAC+M,GAAA,EAAD,KACCjN,EAAAC,EAAAC,cAAC+M,GAAA,EAAD,CACCnT,KAAK,YACLuT,OAAQ,SAACG,GAAD,OACPxN,EAAAC,EAAAC,cAAC4T,GAADzZ,OAAAiN,OAAA,CACCiE,SAAO,EACPoC,YAAY,yBACRH,OAIPxN,EAAAC,EAAAC,cAAC6T,GAAD,MACA/T,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACdJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACbkI,GACAtI,EAAAC,EAAAC,cAAC9D,EAAD,CACCwR,SAAS,SACTtH,KAAK,OACLC,MAAM,yBACNsH,SAAUN,EACV3F,QAAS2L,GALV,OAUDvT,EAAAC,EAAAC,cAAC9D,EAAD,CACCwR,SAAS,SACTtH,KAAK,OACLC,MAAM,iCACNsH,SAAUN,EACV3F,QAASyL,GALV,QASC/K,GACAtI,EAAAC,EAAAC,cAAC9D,EAAD,CACCwR,SAAS,SACTtH,KAAK,OACLC,MAAM,mCACNsH,SAAUN,EACV3F,QAASwL,GALV,eAWFpT,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SACdJ,EAAAC,EAAAC,cAAC9D,EAAD,CACCrD,KAAK,UACL6U,SAAS,SACTtH,KAAK,eACLC,MAAM,8BACNsH,SAAUN,GALX,iNCjKF,IAAMpK,GAAUzD,KAAOqC,IAAViS,MC6IdjM,GAAa,CAClB7D,UAAiB8D,GAAe9D,UAChCK,eAAiByD,GAAezD,gBC/IlB0P,GDkJAzR,YAZE,SAAC9G,GACjB,IAAM0J,EAAQD,GAAYzJ,GAC1B,OAAOrB,OAAAC,EAAA,EAAAD,CAAA,GACH+K,IAWJ2C,GAFcvF,CApID,SAACX,GAAU,IAEvB2Q,EAOG3Q,EAPH2Q,QACAlK,EAMGzG,EANHyG,QACAvP,EAKG8I,EALH9I,KACAqP,EAIGvG,EAJHuG,KACAtO,EAGG+H,EAHH/H,KACAoK,EAEGrC,EAFHqC,UACAK,EACG1C,EADH0C,eAGKoI,EAAUC,iBAAO,IACjBsH,EAAa,CAClBnb,OACAqP,OACAtO,QAiCD,OACCkG,EAAAC,EAAAC,cAAC3C,GAAD,CACCgJ,MAAM,yBACNiM,QAASA,EACTxJ,MAAM,MACNmL,OAAO,OACPC,KAfa,WACdzH,EAAQG,QAAQuH,cAefC,SAZe,WAChB3H,EAAQG,QAAQC,UAAUmH,GAC1B3P,MAYCvE,EAAAC,EAAAC,cAACqU,GAAD,KACCvU,EAAAC,EAAAC,cAAC+M,GAAA,EAAD,CACCyG,oBAAkB,EAClBjH,cAAeyH,EACfhH,SA3Ca,SAACC,EAAQ/S,GACzB,IAAMoP,EAAQ,CACbzQ,OACAqP,OACAtO,KAAOqT,EAAOrT,KACdiJ,GAAOuF,GAGF8C,EAAS6G,GAAczI,GACzB4B,EACHyG,GAAcyB,iBAAiBlI,IAIhClH,EAAUsF,GAEVpP,EAAQgT,eAAc,GACtB7I,IACAoI,EAAQG,QAAQC,UAAUmH,KA0BvB7G,OAAQ,SAAAvN,GAA+B,IAA5BiN,EAA4BjN,EAA5BiN,UAAWsH,EAAiBvU,EAAjBuU,WAIrB,OAHA1H,EAAQG,QAAQC,UAAYA,EAC5BJ,EAAQG,QAAQuH,WAAaA,EAG5BrU,EAAAC,EAAAC,cAAC+M,GAAA,EAAD,KACCjN,EAAAC,EAAAC,cAAC+M,GAAA,EAAD,CACCnT,KAAK,OACLuT,OAAQ,SAACG,GAAD,OACPxN,EAAAC,EAAAC,cAACwN,GAADrT,OAAAiN,OAAA,CACC+D,MAAM,QACNC,WAAY,GACZqC,YAAY,4BACRH,OAIPxN,EAAAC,EAAAC,cAAC+M,GAAA,EAAD,CACCnT,KAAK,OACLuT,OAAQ,SAACG,GAAD,OACPxN,EAAAC,EAAAC,cAACwN,GAADrT,OAAAiN,OAAA,CACCuG,UAAQ,EACRvC,WAAY,GACZD,MAAM,SACFmC,OAIPxN,EAAAC,EAAAC,cAAC+M,GAAA,EAAD,CACCnT,KAAK,OACLuT,OAAQ,SAACG,GAAD,OACPxN,EAAAC,EAAAC,cAAC4T,GAADzZ,OAAAiN,OAAA,CACCiE,SAAO,EACPsC,UAAQ,EACRxB,KAAM,GACFmB,sOE9GR,IAAMgH,GAAc9U,KAAOqC,IAAV0S,KAKKhV,GAAYD,eCWnCkV,gMASJna,EADqBoa,KAAK9S,MAAlBtH,6CAMR,OADuBoa,KAAK9S,MAApB+S,WAMP5U,EAAAC,EAAAC,cAAC2U,GAAD,KACC7U,EAAAC,EAAAC,cAAC4U,GAAD,MACA9U,EAAAC,EAAAC,cAACnD,EAAD,KACCiD,EAAAC,EAAAC,cAAC6U,GAAD,MACA/U,EAAAC,EAAAC,cAAC8U,GAAD,KACChV,EAAAC,EAAAC,cAAC+U,GAAAhV,EAAD,CAAKiV,OAAQ,IACZlV,EAAAC,EAAAC,cAACiV,GAAAlV,EAAD,CAAKmV,KAAM,IACVpV,EAAAC,EAAAC,cAACsU,GAAD,KACCxU,EAAAC,EAAAC,cAACmV,GAAD,MACArV,EAAAC,EAAAC,cAACoV,GAAD,QAGFtV,EAAAC,EAAAC,cAACiV,GAAAlV,EAAD,CAAKmV,KAAM,IACVpV,EAAAC,EAAAC,cAACmK,GAAD,SAIHrK,EAAAC,EAAAC,cAACqV,GAAD,MACAvV,EAAAC,EAAAC,cAACsV,GAAD,QAtBKxV,EAAAC,EAAAC,cAAC2U,GAAD,aAfSY,iBAoDb1N,GAAa,CAClBxN,SAAUoW,EAAWpW,UCtEPma,GDyEAlS,YAZE,SAAA9G,GAGhB,MAAO,CACNkZ,WAHsBpZ,EAAUE,GAAzBkZ,aAaR7M,GAFcvF,CAGbkS,sDE3EItN,GAAU,CACfsO,WAAY,CAAC,aACblM,MAAO,CAAErI,eAGJrF,UAAS6Z,GAAGzU,GAAwBkG,4BCuB3BwO,0GA1BGlS,EAAQmS,GAA4B,IAApBC,EAAoB7c,UAAAC,OAAA,QAAAqM,IAAAtM,UAAA,IAAAA,UAAA,GAC9C8c,EAAa1b,OAAO2b,KAAKH,GACzBI,EAAcH,EAAmCC,EAAtB1b,OAAO2b,KAAKtS,GACvCwS,EAAcC,KAAUD,YAAYxS,GAEtC0S,EAASF,EAAcxS,EAAS2S,KAAU3S,GAiB9C,OAfAuS,EAAWtc,QAAQ,SAAAiI,GAElB,GADqBmU,EAAW/K,SAASpJ,GACzC,CAIA,IAAMmF,EAAQ8O,EAAOjU,GAEjBsU,EACHE,EAASD,KAAUG,IAAIF,EAAQxU,EAAKmF,GAEpCqP,EAAOxU,GAAOmF,KAITqP,WCpBHG,GAAYJ,KAAU7U,KAAK,CAC/B1F,IAAK,CACHgZ,YAAe,EACf9D,aAAe,EACfC,cAAe,GAEjBjV,OAAQ,CACNkF,QAAiB,GACjBoG,QAAiB,GACjBrL,OAAiBrB,EAAcG,aAC/BgI,eAAiB,MCVrB,IAAM0T,GAAYJ,KAAU7U,KAAK,CAC/B8P,UAAW,GAEXtK,WAAY,CACV1L,EAAYE,IACZF,EAAYG,KACZH,EAAYC,MAGdiW,QAAS,CACP7H,UAAe,GACfmJ,aAAe,MCZnB,IAAM2D,GAAYJ,KAAU7U,KAAK,CAC/BgJ,SAAU,GAEVxD,WAAY,CACV1L,EAAYE,IACZF,EAAYG,KACZH,EAAYC,MAGduP,OAAQ,CACNnB,UAAY,GACZ5K,KAAY,MCZhB,IAAM0X,GAAYJ,KAAU7U,KAAK,CAC/B4D,QAAS,GAETE,MAAO,CACLoN,SAAU,EACVlK,QAAU,GACVvP,KAAU,GACVqP,KAAU,GACVtO,KAAU,MCNC0c,oBAAgB,CAC9B7a,IJac,WAA0D,IAAtCD,EAAsCzC,UAAAC,OAAA,QAAAqM,IAAAtM,UAAA,GAAAA,UAAA,GAA9Bsd,GAA8BzW,EAAA7G,UAAAC,OAAA,EAAAD,UAAA,QAAAsM,EAAjBxM,EAAiB+G,EAAjB/G,KAAMW,EAAWoG,EAAXpG,QAC5D,OAAQX,GACN,KAAKqB,EAAQF,eACX,IAAMkc,EAASR,GAAYa,UAAU/a,EAAME,IAAKlC,EAAQkC,KACxD,OAAOua,KAAUG,IAAI5a,EAAO,MAAO0a,GAErC,KAAKhc,EAAQD,kBACX,IAAMic,EAASR,GAAYa,UAAU/a,EAAMI,OAAQpC,EAAQoC,QAC3D,OAAOqa,KAAUG,IAAI5a,EAAO,SAAU0a,GAExC,QACE,OAAO1a,IIvBZyV,QHac,WAA8D,IAAtCzV,EAAsCzC,UAAAC,OAAA,QAAAqM,IAAAtM,UAAA,GAAAA,UAAA,GAA9Bsd,GAA8BzW,EAAA7G,UAAAC,OAAA,EAAAD,UAAA,QAAAsM,EAAjBxM,EAAiB+G,EAAjB/G,KAAMW,EAAWoG,EAAXpG,QAChE,OAAQX,GACN,KAAKqB,GAAQoK,eACX,OAAO2R,KAAUG,IAAI5a,EAAO,YAAahC,EAAQ0X,WAEnD,KAAKhX,GAAQqK,gBACX,OAAO0R,KAAUG,IAAI5a,EAAO,aAAchC,EAAQoN,YAEpD,KAAK1M,GAAQsK,eACX,IAAM0R,EAASM,KAAQhb,EAAMoL,WAAW7M,OAAOP,EAAQ+P,YACvD,OAAO0M,KAAUG,IAAI5a,EAAO,aAAc0a,GAE5C,KAAKhc,GAAQuK,mBACX,IAAMyR,EAASR,GAAYa,UAAU/a,EAAM4V,QAAS5X,EAAQ4X,SAC5D,OAAO6E,KAAUG,IAAI5a,EAAO,UAAW0a,GAEzC,QACE,OAAO1a,IG7BZ2O,QFWc,WAA8D,IAAtC3O,EAAsCzC,UAAAC,OAAA,QAAAqM,IAAAtM,UAAA,GAAAA,UAAA,GAA9Bsd,GAA8BzW,EAAA7G,UAAAC,OAAA,EAAAD,UAAA,QAAAsM,EAAjBxM,EAAiB+G,EAAjB/G,KAAMW,EAAWoG,EAAXpG,QAChE,OAAQX,GACN,KAAKqB,GAAQsP,YACX,IAAM0M,EAAS1a,EAAM4O,SAASrQ,OAAOP,EAAQ+I,SAC7C,OAAO0T,KAAUG,IAAI5a,EAAO,WAAY0a,GAE1C,KAAKhc,GAAQuP,eACX,OAAOwM,KAAUG,IAAI5a,EAAO,WAAY,IAE1C,KAAKtB,GAAQsK,eACX,IAAM0R,EAAS1a,EAAMoL,WAAW7M,OAAOP,EAAQ+P,WAC/C,OAAO0M,KAAUG,IAAI5a,EAAO,aAAc0a,GAE5C,KAAKhc,GAAQwP,kBACX,OAAOuM,KAAUG,IAAI5a,EAAO,WAAY6a,GAAUzP,YAEpD,KAAK1M,GAAQyP,gBACX,IAAMuM,EAASR,GAAYa,UAAU/a,EAAMkP,OAAQlR,EAAQkR,QAC3D,OAAOuL,KAAUG,IAAI5a,EAAO,SAAU0a,GAExC,KAAKhc,GAAQ0P,kBACX,OAAOqM,KAAUG,IAAI5a,EAAO,SAAU6a,GAAU3L,QAElD,QACE,OAAOlP,IElCZuJ,QDMc,WAA8D,IAAtCvJ,EAAsCzC,UAAAC,OAAA,QAAAqM,IAAAtM,UAAA,GAAAA,UAAA,GAA9Bsd,GAA8BzW,EAAA7G,UAAAC,OAAA,EAAAD,UAAA,QAAAsM,EAAjBxM,EAAiB+G,EAAjB/G,KAAMW,EAAWoG,EAAXpG,QAChE,OAAQX,GACN,KAAKqB,GAAQ0J,YACX,OAAOqS,KAAUG,IAAI5a,EAAO,UAAWhC,EAAQwL,SAEjD,KAAK9K,GAAQ4J,eACX,IAAMoS,EAASR,GAAYa,UAAU/a,EAAM0J,MAAO1L,EAAQ0L,OAC1D,OAAO+Q,KAAUG,IAAI5a,EAAO,QAAS0a,GAEvC,KAAKhc,GAAQ6J,iBAAkB,IACrBqE,EAAY5M,EAAM0J,MAAlBkD,QACF8N,EAAM/b,OAAAC,EAAA,EAAAD,CAAA,GACPkc,GAAUnR,MADH,CAEVkD,YAEF,OAAO6N,KAAUG,IAAI5a,EAAO,QAAS0a,GAEvC,QACE,OAAO1a,gDE9BHnB,iBAKeoc,IALzB,SAAUpc,KAAV,OAAAqc,GAAA3W,EAAA4W,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACE,OADFF,EAAAE,KAAA,EACQC,aAAIjP,GAAe3D,kBAD3B,OAEE,OAFFyS,EAAAE,KAAA,EAEQC,aAAI7c,EAAQI,aAAa,CAAEoa,YAAY,KAF/C,wBAAAkC,EAAAI,SAAAC,IAKe,SAAUR,KAAV,OAAAC,GAAA3W,EAAA4W,KAAA,SAAAO,GAAA,cAAAA,EAAAL,KAAAK,EAAAJ,MAAA,OACb,OADaI,EAAAJ,KAAA,EACPK,aAAI,CACRC,aAAWld,EAAQJ,UAAWO,MAFnB,wBAAA6c,EAAAF,SAAAK,sCCRTC,2GAGa5V,EAAKmF,GACtB0Q,aAAaC,QAAQ9V,EAAK+V,KAAKC,UAAU7Q,yCAGtBnF,GAA0B,IAArB0D,EAAqBrM,UAAAC,OAAA,QAAAqM,IAAAtM,UAAA,GAAAA,UAAA,GAAN,KACjC8N,EAAQ0Q,aAAaI,QAAQjW,GACnC,IAEC,OADoB+V,KAAKG,MAAM/Q,IACTzB,EACrB,MAAO6M,GACR,OAAO7M,wCAKWJ,GACnBsS,EAAaO,WAAWjS,GAAaZ,QAASA,4CAI9C,OAAOsS,EAAaQ,aAAalS,GAAaZ,QAAS,0BCb/ChB,iBAsBAC,iBAYAE,iBAiBesS,IAnDzB,SAAUzS,GAAVpE,GAAA,IAAApG,EAAA8P,EAAAzG,EAAAmC,EAAAkR,EAAAvc,EAAA,OAAA+c,GAAA3W,EAAA4W,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAQkB,OARItd,EAAtBoG,EAAsBpG,QAEZ8P,EAAU9P,EAAV8P,OACAzG,EAAOyG,EAAPzG,MAENyG,EAAMzG,GAAKkV,QALfnB,EAAAE,KAAA,EAQwBkB,aAAOlT,IAR/B,OAiBE,OATME,EARR4R,EAAAqB,KASQ/B,EATR/b,OAAA+d,GAAA,EAAA/d,CASqB6K,GACfnC,GACIlJ,EAAQwe,KAAUnT,EAAS,CAAEnC,OACnCqT,EAAOvc,GAAS2P,GAEhB4M,EAAOkC,KAAK9O,GAdhBsN,EAAAE,KAAA,GAiBQuB,aAAKf,GAAagB,aAAcpC,GAjBxC,QAkBE,OAlBFU,EAAAE,KAAA,GAkBQC,aAAI7c,GAAQgK,WAAWgS,IAlB/B,QAmBE,OAnBFU,EAAAE,KAAA,GAmBQC,aAAI7c,GAAQkK,aAAa,CAAEgE,QAASkB,EAAMzG,MAnBlD,yBAAA+T,EAAAI,SAAAuB,IAsBA,SAAUtU,GAAVmJ,GAAA,IAAA5T,EAAAqJ,EAAAmC,EAAAkR,EAAA,OAAAQ,GAAA3W,EAAA4W,KAAA,SAAAO,GAAA,cAAAA,EAAAL,KAAAK,EAAAJ,MAAA,OAIkB,OAJMtd,EAAxB4T,EAAwB5T,QAEdqJ,EAAOrJ,EAAPqJ,GAFVqU,EAAAJ,KAAA,EAIwBkB,aAAOlT,IAJ/B,OAOE,OAHME,EAJRkS,EAAAe,KAKQ/B,EAASlR,EAAQ0F,OAAO,SAAApB,GAAK,OAAIA,EAAMzG,KAAOA,IALtDqU,EAAAJ,KAAA,EAOQuB,aAAKf,GAAagB,aAAcpC,GAPxC,OAQE,OARFgB,EAAAJ,KAAA,GAQQC,aAAI7c,GAAQgK,WAAWgS,IAR/B,QASE,OATFgB,EAAAJ,KAAA,GASQC,aAAI7c,GAAQkK,aAAa,CAAEgE,QAAS,MAT5C,yBAAA8O,EAAAF,SAAAwB,IAYA,SAAUrU,KAAV,IAAAa,EAAA4B,EAAA6R,EAAAC,EAAA,OAAAhC,GAAA3W,EAAA4W,KAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,OACkB,OADlB6B,EAAA7B,KAAA,EACwBuB,aAAKf,GAAasB,gBAD1C,OAEE,OADM5T,EADR2T,EAAAV,KAAAU,EAAA7B,KAAA,EAEQC,aAAI7c,GAAQgK,WAAWc,IAF/B,OAGE,OAHF2T,EAAA7B,KAAA,EAGQC,aAAI7c,GAAQkK,aAAa,CAAEgE,QAAS,MAH5C,OAMqB,OANrBuQ,EAAA7B,KAAA,EAM2BkB,aAAO3N,IANlC,UAMQzD,EANR+R,EAAAV,OAOQQ,EAAezT,EAClBxD,IAAI,SAAA8H,GAAK,OAAIA,EAAMzQ,OACnB6R,OAAO,SAAA7R,GAAI,OAAK+N,EAAWkE,SAASjS,MAEtBG,OAXnB,CAAA2f,EAAA7B,KAAA,SAaI,OADMZ,EAZV/b,OAAA+d,GAAA,EAAA/d,CAYuB,IAAI0e,IAAJ,GAAA9e,OAAAI,OAAA+d,GAAA,EAAA/d,CAAYyM,GAAZzM,OAAA+d,GAAA,EAAA/d,CAA2Bse,MAZlDE,EAAA7B,KAAA,GAaUC,aAAI5O,GAAexD,cAAcuR,IAb3C,yBAAAyC,EAAA3B,SAAA8B,IAiBe,SAAUrC,KAAV,OAAAC,GAAA3W,EAAA4W,KAAA,SAAAoC,GAAA,cAAAA,EAAAlC,KAAAkC,EAAAjC,MAAA,OACb,OADaiC,EAAAjC,KAAA,EACPK,aAAI,CACRC,aAAWld,GAAQwJ,WAAYM,IAC/BoT,aAAWld,GAAQyJ,aAAcM,IACjCmT,aAAWld,GAAQ2J,gBAAiBM,MAJzB,wBAAA4U,EAAA/B,SAAAgC,IC/DR,IAAMC,GAAU9e,OAAOM,OAAO,CACpCye,aAAc,iEC2BAC,4GAxBqC,IAAlClL,EAAkClV,UAAAC,OAAA,QAAAqM,IAAAtM,UAAA,GAAAA,UAAA,GAA3B,KAAMqM,EAAqBrM,UAAAC,OAAA,QAAAqM,IAAAtM,UAAA,GAAAA,UAAA,GAAN,KAC5C,IAAKkV,EACJ,OAAO7I,GAAgB,IAAI2F,KAE5B,GAAIkD,aAAgBlD,KACnB,OAAOkD,EAER,IACC,OAAO2J,KAAM3J,GACZ,MAAOgE,GACR,GAAI7M,EACH,OAAOA,EAGR,MAAM6M,0CAIyB,IAAbhE,EAAalV,UAAAC,OAAA,QAAAqM,IAAAtM,UAAA,GAAAA,UAAA,GAAN,KACpBqgB,EAAUD,EAAUE,UAAUpL,EAAM,IAAIlD,MAC9C,OAAOuO,KAAOF,EAASH,GAAQC,uBCElBK,kHAnBWhX,GACxB,OAAOpI,OAAAC,EAAA,EAAAD,CAAA,GACHoI,EADJ,CAECM,GAAUkV,OACV9J,KAAUkL,GAAUD,8DAIM1f,GAC3B,MAAO,CACNqJ,GAASkV,OACT9J,KAASkL,GAAUD,eACnBrgB,KAASW,EAAQX,MAAQ,OACzBqV,OAAS1U,EAAQ0U,QAAUpT,EAAcC,OACzCmN,KAASuP,KAAKC,UAAUle,EAAQ0O,6BCPzBqI,iBAMAiJ,iBAMAC,iBAYAC,iBAKAC,iBAiBAC,iBAYeC,IA1DzB,SAAUtJ,GAAV3Q,GAAA,IAAApG,EAAAqC,EAAA,OAAA6a,GAAA3W,EAAA4W,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEE,OAF4Btd,EAA9BoG,EAA8BpG,QACpBqC,EAAWrC,EAAXqC,OADV+a,EAAAE,KAAA,EAEQC,aAAItG,EAAWlW,gBAAgB,CAAEsB,YAFzC,wBAAA+a,EAAAI,SAAA8C,IAMA,SAAUN,GAAVpM,GAAA,IAAA5T,EAAA+I,EAAAwX,EAAA,OAAArD,GAAA3W,EAAA4W,KAAA,SAAAO,GAAA,cAAAA,EAAAL,KAAAK,EAAAJ,MAAA,OAGE,OAHuBtd,EAAzB4T,EAAyB5T,QACf+I,EAAY/I,EAAZ+I,QACFwX,EAAiBR,GAAcS,kBAAkBzX,GAFzD2U,EAAAJ,KAAA,EAGQC,aAAIlJ,GAAehE,WAAWkQ,IAHtC,wBAAA7C,EAAAF,SAAAiD,IAMA,SAAUR,GAAVS,GAAA,IAAA1gB,EAAA+I,EAAA1J,EAAA,OAAA6d,GAAA3W,EAAA4W,KAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,OAIqB,OAJWtd,EAAhC0gB,EAAgC1gB,QACxB+I,EAAUgX,GAAcY,qBAAqB3gB,GAC3CX,EAAS0J,EAAT1J,KAFV8f,EAAA7B,KAAA,EAI2BkB,aAAOoC,IAJlC,UAAAzB,EAAAV,KAKkBnN,SAASjS,GAL3B,CAAA8f,EAAA7B,KAAA,QAMI,OANJ6B,EAAA7B,KAAA,EAMUC,aAAIlJ,GAAejJ,aAAa/L,IAN1C,OASE,OATF8f,EAAA7B,KAAA,GASQC,aAAIlJ,GAAehE,WAAWtH,IATtC,yBAAAoW,EAAA3B,SAAAqD,IAYA,SAAUX,GAAVY,GAAA,IAAA9gB,EAAA+gB,EAAA,OAAA7D,GAAA3W,EAAA4W,KAAA,SAAAoC,GAAA,cAAAA,EAAAlC,KAAAkC,EAAAjC,MAAA,OAEE,OAFiCtd,EAAnC8gB,EAAmC9gB,QACzB+gB,EAAU/gB,EAAV+gB,MADVxB,EAAAjC,KAAA,EAEQC,aAAItG,EAAWlW,gBAAgB,CAAEoI,eAAgB4X,KAFzD,wBAAAxB,EAAA/B,SAAAwD,IAKA,SAAUb,GAAVc,GAAA,IAAAjhB,EAAAqJ,EAAAnI,EAAAqI,EAAA2X,EAAA/X,EAAA,OAAA+T,GAAA3W,EAAA4W,KAAA,SAAAgE,GAAA,cAAAA,EAAA9D,KAAA8D,EAAA7D,MAAA,OAE2B,OAFOtd,EAAlCihB,EAAkCjhB,QACxBqJ,EAA6BrJ,EAA7BqJ,GAAInI,EAAyBlB,EAAzBkB,UAAWqI,EAAcvJ,EAAduJ,UADzB4X,EAAA7D,KAAA,EAEiCkB,aAAOrc,GAFxC,OAcE,OAdF+e,EAAAC,EAAA1C,KAEQtV,EAFR+X,EAEQ/X,eAGJA,EADEjI,EACeiI,EAAe5I,OAAO,CACrC8I,KACAnI,YACAqI,cAGeJ,EAAe+H,OAAO,SAAA9H,GAAI,OAAIA,EAAKC,KAAOA,IAX/D8X,EAAA7D,KAAA,EAcQC,aAAItG,EAAWlW,gBAAgB,CAAEoI,oBAdzC,wBAAAgY,EAAA3D,SAAA4D,IAiBA,SAAUhB,GAAViB,GAAA,IAAArhB,EAAAshB,EAAAlK,EAAAC,EAAAkK,EAAAnU,EAAAsP,EAAA,OAAAQ,GAAA3W,EAAA4W,KAAA,SAAAqE,GAAA,cAAAA,EAAAnE,KAAAmE,EAAAlE,MAAA,OAIE,OAJiCtd,EAAnCqhB,EAAmCrhB,QACzBshB,EAAathB,EAAbshB,SACAlK,EAA8CkK,EAA9ClK,YAAaC,EAAiCiK,EAAjCjK,aAAckK,EAAmBD,EAAnBC,eAFrCC,EAAAlE,KAAA,EAIQC,aAAItG,EAAWnW,aAAa,CAAEsW,cAAaC,kBAJnD,OAMqB,OANrBmK,EAAAlE,KAAA,EAM2BkB,aAAOiD,IANlC,OASE,OAHMrU,EANRoU,EAAA/C,KAOQ/B,EAPR/b,OAAA+d,GAAA,EAAA/d,CAOqB,IAAI0e,IAAJ,GAAA9e,OAAAI,OAAA+d,GAAA,EAAA/d,CAAYyM,GAAZzM,OAAA+d,GAAA,EAAA/d,CAA2B4gB,MAPhDC,EAAAlE,KAAA,GASQC,aAAI5O,GAAexD,cAAcuR,IATzC,yBAAA8E,EAAAhE,SAAAkE,IAYe,SAAUrB,KAAV,OAAAnD,GAAA3W,EAAA4W,KAAA,SAAAwE,GAAA,cAAAA,EAAAtE,KAAAsE,EAAArE,MAAA,OACb,OADaqE,EAAArE,KAAA,EACPK,aAAI,CACRC,aAAWld,GAAQ8V,oBAAqBO,IACxC6G,aAAWld,GAAQyV,qBAAsB6J,IACzCpC,aAAWld,GAAQ2V,6BAA8B+J,IACjDxC,aAAWld,GAAQ4V,yBAA0B4J,IAE7C0B,aAAUlhB,GAAQ0V,sBAAuB6J,IACzC2B,aAAUlhB,GAAQ6V,wBAAyB4J,MARhC,wBAAAwB,EAAAnE,SAAAqE,qBClEUC,IAAV,SAAUA,KAAV,OAAA5E,GAAA3W,EAAA4W,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACd,OADcF,EAAAE,KAAA,EACRK,aAAI,CACToE,aAAK9E,IACL8E,aAAK1B,IACL0B,aAAKC,MAJQ,wBAAA5E,EAAAI,SAAAyE,ICIf,ICPwC7f,GAAQ8f,GDO1CC,GAAiBC,eAGjBC,GAAc,CAACF,GAFIG,KAAyBlgB,GAAQ,mBAIpDmgB,GAMHC,KAEGN,GAAQO,aAAYC,GAAUH,GAAiBI,KAAeC,WAAf,EAAmBP,MAExEF,GAAeU,IAAIf,ICtB6BI,GDwBhBA,ICxBQ9f,GDwBhBA,ICtBhB0gB,GAAG,UAAW,WACpBZ,GAAMa,SAAS7L,GAAcH,kBAAkB/V,EAAcE,YAC7DghB,GAAMa,SAAS7L,GAAcL,8BAC7BqL,GAAMa,SAAS7L,GAAcJ,gCAG9B1U,GAAO0gB,GAAG,aAAc,WACvBZ,GAAMa,SAAS7L,GAAcH,kBAAkB/V,EAAcG,iBAG9DiB,GAAO0gB,GAAG,YAAa,WACtBZ,GAAMa,SAAS7L,GAAcH,kBAAkB/V,EAAcI,iBAG9DgB,GAAO0gB,GAAG,gBAAiB,WAC1BZ,GAAMa,SAAS7L,GAAcH,kBAAkB/V,EAAcK,qBCVzD2hB,GAAcC,SAASC,eAAe,QAC5CC,IAASxP,OACRrN,EAAAC,EAAAC,cAAC4c,EAAA,EAAD,CAAUlB,MAAOA,IAChB5b,EAAAC,EAAAC,cAAC6c,GAAD,OAEDL,IjHgHI,kBAAmBM,WACtBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GAClCA,EAAaC,giBkHhIV5S,0eAEuC,IAAjB6S,EAAiBrkB,UAAAC,OAAA,QAAAqM,IAAAtM,UAAA,GAAAA,UAAA,GAAJ,GACvC,OAAKG,MAAM0Y,QAAQwL,GAIZA,EAAW5b,IAAI,SAAAqF,GAAK,MAAK,CAC/BA,QACAR,MAAOuE,OAAO/D,MALP,6DASeqK,WACvB,IACC,IAAMmM,MAAQC,KAAI,IAAAvjB,OAAKmX,UAAL,MAClB,OAAOuG,KAAKG,MAAMH,KAAKC,UAAU2F,QAEhC,MAAOpL,GACR,OAAOf,kCAKK3G","file":"static/js/main.4d93a427.chunk.js","sourcesContent":["/* eslint-disable */\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.1/8 is considered localhost for IPv4.\n\t\twindow.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log('No internet connection found. App is running in offline mode.');\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","/**\n * Makes action creator\n * @param {String} type a type of action\n * @param  {...String} argNames names of values which will be used as payload\n * @returns {Function}\n *\n * Example:\n * const addTodo = makeActionCreator('ADD_TODO', 'text');\n * const action = addTodo('Learn Redux');\n * console.log(action);\n *\n * Output:\n * {\n *    type: 'ADD_TODO',\n *    payload: {\n *      text: 'Learn Redux',\n *    }\n * }\n */\nexport function makeActionCreator(type, ...argNames) {\n\treturn function(...args) {\n\t\tconst action = { type };\n\n\t\tif (argNames.length > 0) {\n\t\t\tconst payload = {};\n\t\t\targNames.forEach((arg, index) => {\n\t\t\t\tconst name = argNames[index];\n\t\t\t\tpayload[name] = args[index];\n\t\t\t});\n\n\t\t\taction.payload = payload;\n\t\t}\n\n\t\treturn action;\n\t};\n}\n","import { makeActionCreator } from '../utils';\n\nconst prefix = 'App/';\n\nconst TYPES = {\n  APP_START         : `${prefix}app-start`,\n  APP_PARAMS_SET    : `${prefix}app-params-set`,\n  SOCKET_PARAMS_SET : `${prefix}socket-params-set`,\n};\n\nconst actions = {\n  ...TYPES,\n\n  appStart         : makeActionCreator(TYPES.APP_START),\n  appParamsSet     : makeActionCreator(TYPES.APP_PARAMS_SET, 'app'),\n  socketParamsSet  : makeActionCreator(TYPES.SOCKET_PARAMS_SET, 'socket'),\n};\n\nexport default actions;\n","export const SOCKET_STATUS = Object.freeze({\n\tconnected    : 'Connected',\n\tdisconnected : 'Disconnected',\n\treconnection : 'Reconnection...',\n\terror        : 'Connection error',\n});\n\nexport const MESSAGE_TYPES = Object.freeze({\n\tserver : 'server',\n\tclient : 'client',\n\tadmin  : 'admin',\n});\n\nexport const EVENT_TYPES = Object.freeze({\n\tping : 'ping',\n\tget  : 'get',\n\tpost : 'post',\n});\n","import { createSelector } from 'reselect';\nimport { SOCKET_STATUS } from '../../constants/socket';\n\nconst app = state => state.App.app;\nconst socket = state => state.App.socket;\n\nexport const selectApp = createSelector(\n  [app],\n  app => app,\n);\n\nexport const selectSocket = createSelector(\n  [socket],\n  socket => socket,\n);\n\nexport const selectIsSocketConnected = createSelector(\n\t[selectSocket],\n\t(socket) => socket.status === SOCKET_STATUS.connected,\n);\n","import Alert from 'antd/lib/alert';\n\nexport default Alert;\n","import Avatar from 'antd/lib/avatar';\n\nexport default Avatar;\n","import Breadcrumb from 'antd/lib/breadcrumb';\n\nconst BreadcrumbItem = Breadcrumb.Item;\n\nexport default Breadcrumb;\nexport {\n\tBreadcrumbItem,\n};\n","import Button from 'antd/lib/button';\n\nexport default Button;\n","import Checkbox from 'antd/lib/checkbox';\n\nconst CheckboxGroup = Checkbox.Group;\n\nexport default Checkbox;\nexport {\n\tCheckboxGroup,\n};\n","import Collapse from 'antd/lib/collapse';\n\nconst CollapsePanel = Collapse.Panel;\n\nexport default Collapse;\nexport {\n\tCollapsePanel,\n};\n","import Icon from 'antd/lib/icon';\n\nexport default Icon;\n","import Input from 'antd/lib/input';\n\nconst { TextArea, Password, Search, Group } = Input;\n\nexport default Input;\nexport {\n\tTextArea,\n\tPassword,\n\tSearch,\n\tGroup,\n};\n","import Layout from 'antd/lib/layout';\n\nconst { Header, Content, Footer, Sider } = Layout;\n\nexport default Layout;\nexport {\n\tHeader,\n\tContent,\n\tFooter,\n\tSider,\n};\n","import Menu from 'antd/lib/menu';\n\nconst { SubMenu } = Menu;\nconst MenuItem = Menu.Item;\n\nexport default Menu;\nexport {\n\tSubMenu,\n\tMenuItem,\n};\n","import Message from 'antd/lib/message';\n\nexport default Message;\n","import Modal from 'antd/lib/modal';\n\nexport default Modal;\n","import Select from 'antd/lib/select';\n\nconst { Option } = Select;\n\nexport default Select;\nexport {\n\tOption,\n};\n","import Tag from 'antd/lib/tag';\n\nexport default Tag;\n","import Typography from 'antd/lib/typography';\n\nconst { Text, Paragraph, Title } = Typography;\n\nexport default Typography;\nexport {\n\tText,\n\tParagraph,\n\tTitle,\n};\n","export const THEME = Object.freeze({\n\theight: {\n\t\theader: 64,\n\t\tfooter: 48,\n\t\thistoryToolbar: 40,\n\t\temitterToolbar: 40,\n\t\th4Titile: 38,\n\t},\n\tmargin: {\n\t\tmainContent: 8,\n\t\thistoryList: 8,\n\t},\n\tpadding: {\n\t\tmainContent: 16,\n\t},\n\tbg: {\n\t\theader: '#ffffff',\n\t\tfooter: '#ffffff',\n\t\tsidebar: '#001529',\n\t\tmainContent: '#ffffff',\n\t\tpanel: '#fafafa',\n\t},\n\ttext: {\n\t\tmain: '#1d1d1d',\n\t\thint: '#767676',\n\t\tinverted: '#ffffff',\n\t\tsidebarType: '#00ab00',\n\t},\n\tborder: {\n\t\thistory: '#d9d9d9',\n\t\thint: '#00577c',\n\t},\n});\n\nconst {\n\theight: h,\n\tmargin: m,\n\tpadding: p,\n} = THEME;\n\nconst mainContent      = h.header + h.footer + 2 * m.mainContent;\nconst historyContainer = mainContent + 2 * p.mainContent;\nconst historyList      = historyContainer + h.historyToolbar + h.h4Titile + m.historyList;\nconst leftContainer    = historyContainer;\n\nexport const MIN_HEIGHTS = Object.freeze({\n\tmainContent,\n\thistoryContainer,\n\thistoryList,\n\tleftContainer,\n});\n","import styled from 'styled-components';\nimport { Content as LibContent } from '../../lib';\nimport { THEME, MIN_HEIGHTS } from '../../../constants/theme';\n\nconst { bg, margin, padding } = THEME;\n\nexport const Content = styled(LibContent)`\n  margin: ${margin.mainContent}px;\n  .main-content {\n  \tbackground-color: ${bg.mainContent};\n  \tmin-height: calc(100vh - ${MIN_HEIGHTS.mainContent}px);\n  \tpadding: ${padding.mainContent}px;\n  }\n`;\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport { Content } from './MainContent.style';\n\nconst MainContent = ({ children }) => {\n\treturn (\n\t\t<Content>\n\t\t\t<div className=\"main-content\">\n\t\t\t\t{children}\n\t\t\t</div>\n\t\t</Content>\n\t);\n};\n\nMainContent.propTypes = {\n\tchildren: PropTypes.oneOfType([\n\t\tPropTypes.node,\n\t\tPropTypes.arrayOf(PropTypes.node),\n\t]),\n};\n\nMainContent.defaultProps = {\n\tchildren: null,\n};\n\nexport default MainContent;\n","import MainContent from './MainContent';\n\nexport default MainContent;\nexport { MainContent };","import styled from 'styled-components';\nimport { Layout as LibLayout } from '../../lib';\n\nexport const Layout = styled(LibLayout)`\n  min-height: 100vh;\n`;\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport {Layout} from './MainLayout.style';\n\nconst MainLayout = ({ children }) => {\n\treturn (\n\t\t<Layout>\n\t\t\t{children}\n\t\t</Layout>\n\t);\n};\n\nMainLayout.propTypes = {\n\tchildren: PropTypes.oneOfType([\n\t\tPropTypes.node,\n\t\tPropTypes.arrayOf(PropTypes.node),\n\t]),\n};\n\nMainLayout.defaultProps = {\n\tchildren: null,\n};\n\nexport default MainLayout;\n","import MainLayout from './MainLayout';\n\nexport default MainLayout;\nexport { MainLayout };\n","const {\n\tREACT_APP_SOCKET_SERVER_PROTOCOL,\n\tREACT_APP_SOCKET_SERVER_ADDRESS,\n\tREACT_APP_SOCKET_SERVER_PORT,\n\tREACT_APP_ADMIN_HASH,\n} = process.env;\n\nconst socket = {\n\tprotocol : REACT_APP_SOCKET_SERVER_PROTOCOL || 'http',\n\taddress  : REACT_APP_SOCKET_SERVER_ADDRESS || 'localhost',\n\tport     : REACT_APP_SOCKET_SERVER_PORT || '9710',\n};\nconst socketConnectionString = `${socket.protocol}://${socket.address}:${socket.port}`;\nconst adminHash = REACT_APP_ADMIN_HASH || '198d69b1-c9dc-46cc-93e5-1e2e78cb25bf';\n\nexport {\n\tsocketConnectionString,\n\tadminHash,\n};\n","import Alert from './Alert';\n\nexport default Alert;\nexport { Alert };\n","import React from 'react';\nimport { useTransition, animated } from 'react-spring';\n\nimport { Alert as LibAlert } from '../../lib';\n\nconst Alert = (alertProps) => {\n\n\tconst transitions = useTransition(true, null, {\n\t\tfrom: { opacity: 0 },\n\t\tenter: { opacity: 1 },\n\t\tleave: { opacity: 0 },\n\t});\n\n\treturn transitions.map(({ item, key, props }) =>\n\t\titem && (\n\t\t\t<animated.div key={key} style={props}>\n\t\t\t\t<LibAlert {...alertProps} />\n\t\t\t</animated.div>\n\t\t));\n};\n\nexport default Alert;\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { socketConnectionString } from '../../../config';\nimport { selectSocket } from '../../../redux/app/selectors';\nimport { SOCKET_STATUS } from '../../../constants/socket';\n\nimport { Alert } from '../../animated';\n\nconst alertTypes = {\n\t[SOCKET_STATUS.connected]    : 'success',\n\t[SOCKET_STATUS.disconnected] : 'warning',\n\t[SOCKET_STATUS.reconnection] : 'info',\n\t[SOCKET_STATUS.error]        : 'error',\n};\n\nconst alertMessages = {\n\t[SOCKET_STATUS.connected]    : 'Socket server is connected',\n\t[SOCKET_STATUS.disconnected] : 'Socket server is disconnected',\n\t[SOCKET_STATUS.reconnection] : 'Socket server is doing reconnection...',\n\t[SOCKET_STATUS.error]        : 'Socket server connection error',\n};\n\nconst SocketStatus = ({ status }) => {\n\n\tconst type    = alertTypes[status];\n\tconst message = `${alertMessages[status]} on ${socketConnectionString}`;\n\n\treturn (\n\t\t<Alert\n\t\t\tshowIcon\n\t\t\tkey={type}\n\t\t\ttype={type}\n\t\t\tmessage={message}\n\t\t/>\n\t);\n};\n\nSocketStatus.propTypes = {\n\tstatus: PropTypes.string.isRequired,\n};\n\nconst mapState = (state) => {\n\tconst { status } = selectSocket(state);\n\n\treturn {\n\t\tstatus,\n\t};\n};\n\nexport default connect(mapState)(SocketStatus);\n","import SocketStatus from './SocketStatus';\n\nexport default SocketStatus;\nexport { SocketStatus };\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { selectSocket } from '../../../redux/app/selectors';\n\nimport { Alert } from '../../animated';\n\nconst ConnectedUsers = ({ connectedUsers }) => {\n\tif (!connectedUsers.length) {\n\t\treturn (\n\t\t\t<Alert\n\t\t\t\tshowIcon\n\t\t\t\tkey=\"warning\"\n\t\t\t\ttype=\"warning\"\n\t\t\t\tmessage=\"Nobody connected\"\n\t\t\t/>\n\t\t);\n\t}\n\n\treturn connectedUsers.map(user => {\n\t\tconst { id, handshake } = user;\n\t\tconst { headers: { origin } } = handshake;\n\n\t\treturn (\n\t\t\t<Alert\n\t\t\t\tshowIcon\n\t\t\t\tkey={id}\n\t\t\t\ttype=\"info\"\n\t\t\t\tmessage={origin}\n\t\t\t/>\n\t\t);\n\t});\n};\n\nConnectedUsers.propTypes = {\n\tconnectedUsers: PropTypes.arrayOf(PropTypes.shape({\n\t\tid: PropTypes.string.isRequired,\n\t\thandshake: PropTypes.shape({\n\t\t\theaders: PropTypes.shape({\n\t\t\t\torigin: PropTypes.string,\n\t\t\t}),\n\t\t}),\n\t})),\n};\n\nConnectedUsers.defaultProps = {\n\tconnectedUsers: [],\n};\n\nconst mapState = (state) => {\n\tconst { connectedUsers } = selectSocket(state);\n\n\treturn {\n\t\tconnectedUsers,\n\t};\n};\n\n\nexport default connect(mapState)(ConnectedUsers);\n","import ConnectedUsers from './ConnectedUsers';\n\nexport default ConnectedUsers;\nexport { ConnectedUsers };\n","import styled from 'styled-components';\n\nimport { Header } from '../../components/lib';\nimport { THEME } from '../../constants/theme';\n\nconst { height, bg } = THEME;\n\nexport const Wrapper = styled(Header)`\n  &.ant-layout-header {\n  \tdisplay: flex;\n  \tjustify-content: space-between;\n  \talign-items: stretch;\n  \tpadding: 0 24px;\n  \theight: ${height.header}px;\n  \tbackground-color: ${bg.header};\n  \t\n  \t.left {\n  \t\tdisplay: flex;\n  \t\tjustify-content: flex-start;\n  \t\talign-items: center;\n  \t\t\n  \t\tspan {\n  \t\t\tmargin-right: 8px;\n  \t\t}\n  \t}\n  \t\n  \t.right {\n  \t\tdisplay: flex;\n  \t\tjustify-content: flex-end;\n  \t\talign-items: center;\n  \t}\n  }\n`;\n","import React from 'react';\n\nimport { SocketStatus, ConnectedUsers } from '../../components/connected';\nimport { Wrapper } from './Header.style';\n\nconst Header = () => {\n\treturn (\n\t\t<Wrapper>\n\t\t\t<div className=\"left\">\n\t\t\t\t<span>Connected:</span>\n\t\t\t\t<ConnectedUsers />\n\t\t\t</div>\n\t\t\t<div className=\"right\">\n\t\t\t\t<SocketStatus />\n\t\t\t</div>\n\t\t</Wrapper>\n\t);\n};\n\nexport default Header;\n","import styled from 'styled-components';\n\nimport { Footer } from '../../components/lib';\nimport { THEME } from '../../constants/theme';\n\nconst { height, bg } = THEME;\n\nexport const Wrapper = styled(Footer)`\n  &.ant-layout-footer {\n  \tdisplay: flex;\n  \talign-items: center;\n  \theight: ${height.footer}px;\n  \tbackground-color: ${bg.footer};\n  \tpadding: 0 16px;\n  \tfont-size: 12px;\n  \t\n  \tspan {\n  \t\tmargin-right: 8px;\n  \t}\n  \ta {\n  \t\tmargin-right: 24px;\n  \t\t\n  \t\t.anticon-github {\n  \t\t\tfont-size: 16px;\n  \t\t}\n  \t}\n  }\n`;\n","import React from 'react';\n\nimport { Icon } from '../../components/lib';\nimport { Wrapper } from './Footer.style';\n\nconst Footer = () => {\n\treturn (\n\t\t<Wrapper>\n\t\t\t<span>(c) 2019</span>\n\t\t\t<a href=\"https://github.com/daminort\" target=\"_blank\" rel=\"noopener noreferrer\">Demien</a>\n\t\t\t<span>Project source:</span>\n\t\t\t<a href=\"https://github.com/daminort/socket-man\" target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t\t<Icon type=\"github\" />\n\t\t\t</a>\n\t\t</Wrapper>\n\t);\n};\n\nexport default Footer;\n","import { makeActionCreator } from '../utils';\n\nconst prefix = 'Queries/';\n\nconst TYPES = {\n  QUERY_SAVE       : `${prefix}query-save`,\n  QUERY_REMOVE     : `${prefix}query-remove`,\n\n  QUERIES_SET      : `${prefix}queries-set`,\n  QUERIES_RESTORE  : `${prefix}queries-restore`,\n\n  MODAL_DATA_SET   : `${prefix}modal-data-set`,\n  MODAL_DATA_RESET : `${prefix}modal-data-reset`,\n};\n\nconst actions = {\n  ...TYPES,\n\n  querySave      : makeActionCreator(TYPES.QUERY_SAVE, 'query'),\n  queryRemove    : makeActionCreator(TYPES.QUERY_REMOVE, 'id'),\n\n  queriesSet     : makeActionCreator(TYPES.QUERIES_SET, 'queries'),\n  queriesRestore : makeActionCreator(TYPES.QUERIES_RESTORE),\n\n  modalDataSet   : makeActionCreator(TYPES.MODAL_DATA_SET, 'modal'),\n  modalDataReset : makeActionCreator(TYPES.MODAL_DATA_RESET),\n};\n\nexport default actions;\n","import { makeActionCreator } from '../utils';\n\nconst prefix = 'Emitter/';\n\nconst TYPES = {\n  EVENT_DATA_SET     : `${prefix}event-data-set`,\n  EVENT_TYPES_SET    : `${prefix}event-types-set`,\n  EVENT_TYPE_ADD     : `${prefix}event-type-add`,\n  TOOLBAR_PARAMS_SET : `${prefix}toolbar-params-set`,\n};\n\nconst actions = {\n  ...TYPES,\n\n  eventDataSet     : makeActionCreator(TYPES.EVENT_DATA_SET, 'eventData'),\n  eventTypesSet    : makeActionCreator(TYPES.EVENT_TYPES_SET, 'eventTypes'),\n  eventTypeAdd     : makeActionCreator(TYPES.EVENT_TYPE_ADD, 'eventType'),\n  toolbarParamsSet : makeActionCreator(TYPES.TOOLBAR_PARAMS_SET, 'toolbar'),\n};\n\nexport default actions;\n","import { createSelector } from 'reselect';\nimport { find } from '../../helpers/lodash';\n\nconst queries = state => state.Queries.queries;\nconst modal   = state => state.Queries.modal;\n\nexport const selectQueries = createSelector(\n  [queries],\n\tqueries => queries,\n);\n\nexport const selectModal = createSelector(\n\t[modal],\n\tmodal => modal,\n);\n\nexport const selectQuery = (id, defaultValue = null) => {\n\treturn createSelector(\n\t\t[selectQueries],\n\t\t(queries) => {\n\t\t\tconst query = find(queries, { id });\n\t\t\treturn query || defaultValue;\n\t\t}\n\t);\n};\n","export const POSITION = Object.freeze({\n\tleft   : 'left',\n\tright  : 'right',\n\ttop    : 'top',\n\tbottom : 'bottom',\n});\n\nexport const STORAGE_KEYS = Object.freeze({\n\tqueries: 'queries',\n});\n","import styled from 'styled-components';\n\nimport { Avatar } from '../../lib';\nimport { THEME } from '../../../constants/theme';\n\nconst { bg, text, border } = THEME;\n\nexport const StyledWrapper = styled(Avatar)`\n  &.ant-avatar {\n  \tmin-width: 40px;\n  \tbackground-color: ${bg.mainContent};\n  \tcolor: ${text.main};\n  \tborder: 1px solid ${border.history};\n  }\n  \n  &.left {\n  \tmargin-right: 8px;\n  }\n  &.right {\n  \tmargin-left: 8px;\n  }\n`;\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport { POSITION } from '../../../constants/common';\nimport { MESSAGE_TYPES } from '../../../constants/socket';\nimport { capitalize } from '../../../helpers/lodash';\n\nimport { StyledWrapper } from './Avatar.style';\n\nconst icons = {\n\t[MESSAGE_TYPES.server]: 'hdd',\n\t[MESSAGE_TYPES.client]: 'laptop',\n\t[MESSAGE_TYPES.admin]: 'user',\n};\n\nconst Avatar = ({ type, position }) => {\n\tconst className = classnames({\n\t\tleft  : (position === POSITION.left),\n\t\tright : (position === POSITION.right),\n\t});\n\n\treturn (\n\t\t<StyledWrapper\n\t\t\tsize={40}\n\t\t\ticon={icons[type]}\n\t\t\tclassName={className}\n\t\t\ttitle={capitalize(type)}\n\t\t/>\n\t);\n};\n\nAvatar.propTypes = {\n\ttype: PropTypes.oneOf([\n\t\tMESSAGE_TYPES.server,\n\t\tMESSAGE_TYPES.client,\n\t\tMESSAGE_TYPES.admin,\n\t]).isRequired,\n\tposition: PropTypes.oneOf([\n\t\tPOSITION.left,\n\t\tPOSITION.right,\n\t]).isRequired,\n};\n\nexport default Avatar;\n","import Avatar from './Avatar';\n\nexport default Avatar;\n","import React, { forwardRef } from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport { Select, Option } from '../../lib';\n\nconst selectStyle = { minWidth: '160px' };\n\nconst EventTypeSelect = forwardRef((props, ref) => {\n\tconst { eventTypes, value, style, onChange, ...restProps } = props;\n\tconst resStyle = { ...selectStyle, ...style };\n\n\tconst options = eventTypes.map(type => (\n\t\t<Option key={type} value={type}>{type}</Option>\n\t));\n\n\treturn (\n\t\t<Select\n\t\t\tref={ref}\n\t\t\tvalue={value}\n\t\t\tstyle={resStyle}\n\t\t\tonChange={onChange}\n\t\t\t{...restProps}\n\t\t>\n\t\t\t{options}\n\t\t</Select>\n\t);\n});\n\nEventTypeSelect.propTypes = {\n\teventTypes : PropTypes.arrayOf(PropTypes.string),\n\tvalue      : PropTypes.string,\n\tstyle      : PropTypes.object,\n\tonChange   : PropTypes.func,\n};\n\nEventTypeSelect.defaultProps = {\n\teventTypes : [],\n\tvalue      : '',\n\tstyle      : {},\n\tonChange   : () => {},\n};\n\nexport default EventTypeSelect;\n","import styled from 'styled-components';\nimport { THEME } from '../../../constants/theme';\n\nconst { height, bg, text } = THEME;\n\nexport const Wrapper = styled.div`\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n  height: ${height.header}px;\n  background-color: ${bg.sidebar};\n  color: ${text.inverted};\n  font-family: Georgia, Times, 'Times New Roman', serif;\n  font-size: 24px;\n  font-weight: bold;\n`;\n","import Logo from './Logo';\n\nexport default Logo;\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport { Wrapper } from './Logo.style';\n\nconst Logo = ({ collapsed }) => {\n\n\treturn (\n\t\t<Wrapper>{collapsed ? 'SM' : 'Socket-Man'}</Wrapper>\n\t);\n};\n\nLogo.propTypes = {\n\tcollapsed: PropTypes.bool.isRequired,\n};\n\nexport default Logo;\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport queriesActions from '../../../redux/queries/actions';\n\nimport { Icon } from '../../../components/lib';\n\nconst ItemContent = ({ id, name, type, icon, collapsed, queryRemove }) => {\n\n\tconst onClickRemove = (event) => {\n\t\tevent.stopPropagation();\n\t\tqueryRemove(id);\n\t};\n\n\treturn (\n\t\t<div className=\"menu-item\">\n\t\t\t{icon && <Icon type={icon} />}\n\t\t\t{type && <div className=\"type\" title={type}>{type}</div>}\n\t\t\t{!collapsed && <div className=\"name\">{name}</div>}\n\t\t\t{(!collapsed && type) && <Icon type=\"close\" className=\"remove\" onClick={onClickRemove} />}\n\t\t</div>\n\t);\n};\n\nItemContent.propTypes = {\n\tid           : PropTypes.string.isRequired,\n\tname         : PropTypes.string.isRequired,\n\ttype         : PropTypes.string,\n\ticon         : PropTypes.string,\n\tcollapsed    : PropTypes.bool.isRequired,\n\tqueryRemove  : PropTypes.func.isRequired,\n};\n\nItemContent.defaultProps = {\n\ttype: '',\n\ticon: '',\n};\n\nconst mapActions = {\n\tqueryRemove  : queriesActions.queryRemove,\n};\n\nexport default connect(\n\tnull,\n\tmapActions\n)(ItemContent);\n","import styled from 'styled-components';\nimport { THEME } from '../../constants/theme';\n\nconst { text } = THEME;\n\nexport const Wrapper = styled.div`\n  display: block;\n  \n  .ant-menu-inline > .ant-menu-item {\n  \theight: auto;\n\t\tmin-height: 40px;\n  }\n  \n  .menu-item {\n  \tposition: relative;\n  \tdisplay: flex;\n  \tjustify-content: flex-start;\n  \talign-items: center;\n  \t\n\t\t.type {\n\t\t\twidth: 40px;\n\t\t\tcolor: ${text.sidebarType};\n\t\t\twhite-space: nowrap;\n\t\t\toverflow: hidden;\n\t\t\ttext-overflow: ellipsis;\n\t\t\tmargin-right: 8px;\n\t\t}\n\t\t\n\t\t.remove {\n\t\t\tposition: absolute;\n\t\t\tright: 1px;\n\t\t\topacity: 0;\n\t\t\ttransition: opacity .3s linear;\n\t\t}\n\t\t\n\t\t&:hover {\n\t\t\t.remove {\n\t\t\t\topacity: 1;\n\t\t\t}\n\t\t}\n  }\n  \n  .ant-menu-item-selected {\n  \t.menu-item {\n  \t\t.type {\n  \t\t\tcolor: ${text.inverted};\n  \t\t}\n  \t\t.remove {\n\t\t\t\topacity: 1;\n\t\t\t}\n  \t}\n  }\n  \n  .ant-menu-inline-collapsed > .ant-menu-item {\n  \tpadding: 0 8px!important;\n  \t.menu-item {\n  \t\tjustify-content: center;\n  \t\t.type {\n  \t\t\ttext-align: center;\n  \t\t} \n  \t}\n  }\n`;\n","import React, { useState } from 'react';\nimport * as PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport queriesActions from '../../redux/queries/actions';\nimport emitterActions from '../../redux/emitter/actions';\nimport { selectQueries, selectModal } from '../../redux/queries/selectors';\n\nimport { Sider, Menu, MenuItem } from '../../components/lib';\nimport { Logo } from '../../components/ui';\n\nimport { find } from '../../helpers/lodash';\nimport { ItemContent } from './ItemContent';\n\nimport { Wrapper } from './Sidebar.style';\nimport { queryProps } from './propTypes';\n\nconst Sidebar = (props) => {\n\tconst {\n\t\tqueryID,\n\t\tqueries,\n\t\tmodalDataSet,\n\t\ttoolbarParamsSet,\n\t\teventDataSet,\n\t} = props;\n\n\tconst [collapsed, setCollapsed] = useState(false);\n\n\tconst onSelect = ({ key }) => {\n\t\tif (key === '0') {\n\t\t\treturn;\n\t\t}\n\t\tconst query = find(queries, { id: key });\n\n\t\ttoolbarParamsSet({ eventType: query.type });\n\t\teventDataSet(query.body);\n\t\tmodalDataSet({ queryID: key });\n\t};\n\n\tconst noItems = !queries.length && (\n\t\t<MenuItem key=\"0\">\n\t\t\t<ItemContent\n\t\t\t\tid=\"0\"\n\t\t\t\tname=\"No saved queries\"\n\t\t\t\ticon=\"info-circle\"\n\t\t\t\tcollapsed={collapsed}\n\t\t\t/>\n\t\t</MenuItem>\n\t);\n\n\tconst menuItems = queries.map(item => (\n\t\t<MenuItem key={item.id}>\n\t\t\t<ItemContent\n\t\t\t\tid={item.id}\n\t\t\t\tname={item.name}\n\t\t\t\ttype={item.type}\n\t\t\t\tcollapsed={collapsed}\n\t\t\t/>\n\t\t</MenuItem>\n\t));\n\n\treturn (\n\t\t<Sider\n\t\t\tcollapsible\n\t\t\twidth={300}\n\t\t\tcollapsed={collapsed}\n\t\t\tonCollapse={() => setCollapsed(!collapsed)}\n\t\t>\n\t\t\t<Wrapper>\n\t\t\t\t<Logo collapsed={collapsed} />\n\t\t\t\t<Menu\n\t\t\t\t\ttheme=\"dark\"\n\t\t\t\t\tmode=\"inline\"\n\t\t\t\t\tselectedKeys={[queryID]}\n\t\t\t\t\tonSelect={onSelect}\n\t\t\t\t>\n\t\t\t\t\t{noItems}\n\t\t\t\t\t{menuItems}\n\t\t\t\t</Menu>\n\t\t\t</Wrapper>\n\t\t</Sider>\n\t);\n};\n\nSidebar.propTypes = {\n\tqueryID: PropTypes.string.isRequired,\n\tqueries: PropTypes.arrayOf(queryProps).isRequired,\n\n\tmodalDataSet     : PropTypes.func.isRequired,\n\ttoolbarParamsSet : PropTypes.func.isRequired,\n\teventDataSet     : PropTypes.func.isRequired,\n};\n\nconst mapState = (state) => {\n\tconst { queryID } = selectModal(state);\n\treturn {\n\t\tqueryID,\n\t\tqueries: selectQueries(state),\n\t};\n};\n\nconst mapActions = {\n\tmodalDataSet     : queriesActions.modalDataSet,\n\ttoolbarParamsSet : emitterActions.toolbarParamsSet,\n\teventDataSet     : emitterActions.eventDataSet,\n};\n\nexport default connect(\n\tmapState,\n\tmapActions\n)(Sidebar);\n","import * as PropTypes from 'prop-types';\n\nexport const queryProps = PropTypes.shape({\n\tid   : PropTypes.string.isRequired,\n\tname : PropTypes.string.isRequired,\n\ttype : PropTypes.string.isRequired,\n\tbody : PropTypes.string.isRequired,\n});\n","import { makeActionCreator } from '../utils';\n\nconst prefix = 'History/';\n\nconst TYPES = {\n  MESSAGE_ADD       : `${prefix}message-add`,\n  MESSAGES_CLEAR    : `${prefix}messages-clear`,\n\n  EVENT_TYPE_ADD    : `${prefix}event-type-add`,\n  EVENT_TYPES_CLEAR : `${prefix}event-types-clear`,\n\n  FILTER_DATA_SET   :`${prefix}filter-data-set`,\n  FILTER_DATA_RESET :`${prefix}filter-data-reset`,\n};\n\nconst actions = {\n  ...TYPES,\n\n  messageAdd      : makeActionCreator(TYPES.MESSAGE_ADD, 'message'),\n  messagesClear   : makeActionCreator(TYPES.MESSAGES_CLEAR),\n\n  eventTypeAdd    : makeActionCreator(TYPES.EVENT_TYPE_ADD, 'eventType'),\n  eventTypesClear : makeActionCreator(TYPES.EVENT_TYPES_CLEAR),\n\n  filterDataSet   : makeActionCreator(TYPES.FILTER_DATA_SET, 'filter'),\n  filterDataReset : makeActionCreator(TYPES.FILTER_DATA_RESET),\n};\n\nexport default actions;\n","import { createSelector } from 'reselect';\nimport { find } from '../../helpers/lodash';\nimport { TransformsUtils } from '../../helpers/utils/TransformsUtils';\n\nconst messages   = (state) => state.History.messages;\nconst eventTypes = (state) => state.History.eventTypes;\nconst filter     = (state) => state.History.filter;\n\nexport const selectMessages = createSelector(\n  [messages],\n\tmessages => messages,\n);\n\nexport const selectMessage = (id) => {\n\treturn createSelector(\n\t\t[selectMessages],\n\t\t(messages) => find(messages, { id }),\n\t);\n};\n\nexport const selectEventTypes = createSelector(\n\t[eventTypes],\n\teventTypes => eventTypes,\n);\n\nexport const selectEventTypesList = createSelector(\n\t[selectEventTypes],\n\teventTypes => TransformsUtils.createSelectOptions(eventTypes),\n);\n\nexport const selectFilter = createSelector(\n\t[filter],\n\tfilter => filter,\n);\n\nexport const selectFilteredMessages = createSelector(\n\t[selectMessages, selectFilter],\n\t(messages, filter) => {\n\t\tconst { eventType, text } = filter;\n\t\tconst event   = eventType && String(eventType).trim();\n\t\tconst message = text && String(text).trim();\n\n\t\treturn messages.filter(item => {\n\t\t\treturn (\n\t\t\t\t(eventType ? item.event === event : true)\n\t\t\t\t&& (text ? item.message.includes(message) : true)\n\t\t\t);\n\t\t});\n\t},\n);\n","import * as PropTypes from 'prop-types';\n\nexport const propTypes = {\n\tlabel      : PropTypes.string,\n\tlabelWidth : PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\tnoLabel    : PropTypes.bool,\n\tnoStretch  : PropTypes.bool,\n\n\tfield: PropTypes.shape({\n\t\tname     : PropTypes.string.isRequired,\n\t\tvalue    : PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.instanceOf(Date)]),\n\t\tonChange : PropTypes.func,\n\t\tonBlur   : PropTypes.func,\n\t}),\n\n\tform: PropTypes.shape({\n\t\ttouched  : PropTypes.object,\n\t\terrors    : PropTypes.object,\n\t}),\n};\n\nexport const defaultProps = {\n\tlabel      : '',\n\tlabelWidth : 25, // in percents\n\tnoLabel    : false,\n\tnoStretch  : false,\n\n\tfield: {\n\t\tvalue    : '',\n\t},\n\n\tform: {\n\t\ttouched  : {},\n\t\terrors   : {},\n\t},\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport { propTypes, defaultProps } from '../prop-types';\nimport { Wrapper } from './Control.style';\n\nconst Control = ({ label, labelWidth, noLabel, noStretch, component }) => {\n\n\tconst lw = (typeof labelWidth === 'number') ? `${labelWidth}%` : labelWidth;\n\tconst lStyle = {\n\t\twidth: lw,\n\t\tmarginRight: (noStretch) ? 8 : 0,\n\t};\n\tconst wStyle = { width: (noStretch) ? 'auto' : '100%' };\n\n\treturn (\n\t\t<Wrapper style={wStyle} className=\"form-field\">\n\t\t\t{!noLabel && (\n\t\t\t\t<span className=\"label\" style={lStyle}>{label}</span>\n\t\t\t)}\n\t\t\t{component}\n\t\t</Wrapper>\n\t);\n};\n\nControl.propTypes = {\n\tcomponent  : PropTypes.element.isRequired,\n\tlabel      : propTypes.label,\n\tlabelWidth : propTypes.labelWidth,\n\tnoLabel    : propTypes.noLabel,\n\tnoStretch  : propTypes.noStretch,\n};\n\nControl.defaultProps = {\n\tlabel      : defaultProps.label,\n\tlabelWidth : defaultProps.labelWidth,\n\tnoLabel    : defaultProps.noLabel,\n\tnoStretch  : defaultProps.noStretch,\n};\n\nexport default Control;\n","import React from 'react';\n\nimport { Input as LibInput } from '../../lib';\nimport { Control } from '../Control';\nimport { propTypes, defaultProps } from '../prop-types';\n\nconst Input = (props) => {\n\tconst {\n\t\tlabel,\n\t\tlabelWidth,\n\t\tnoLabel,\n\t\tnoStretch,\n\t\tfield,\n\t\tform,\n\t\t...restProps\n\t} = props;\n\n\treturn (\n\t\t<Control\n\t\t\tlabel={label}\n\t\t\tlabelWidth={labelWidth}\n\t\t\tnoLabel={noLabel}\n\t\t\tnoStretch={noStretch}\n\t\t\tcomponent={(\n\t\t\t\t<LibInput\n\t\t\t\t\t{...field}\n\t\t\t\t\t{...restProps}\n\t\t\t\t/>\n\t\t\t)}\n\t\t/>\n\t);\n};\n\nInput.propTypes = {\n\t...propTypes,\n};\n\nInput.defaultProps = {\n\t...defaultProps,\n};\n\nexport default Input;\n","import Input from './Input';\n\nexport default Input;\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport { Select as LibSelect, Option } from '../../lib';\nimport { Control } from '../Control';\nimport { propTypes, defaultProps } from '../prop-types';\n\nconst selectStyle = { minWidth: '160px' };\n\nconst Select = (props) => {\n\tconst {\n\t\tlabel,\n\t\tlabelWidth,\n\t\tnoLabel,\n\t\tnoStretch,\n\t\tfield,\n\t\tform,\n\t\toptions,\n\t\tstyle,\n\t\t...restProps\n\t} = props;\n\n\tconst resStyle = { ...selectStyle, ...style };\n\n\tconst optionItems = options.map(({ value, title }) => (\n\t\t<Option key={value} value={value}>{title}</Option>\n\t));\n\n\tconst onChangeValue = (value) => {\n\t\t// because Formik expects normal Event with normal target, not single value\n\t\tconst event = {\n\t\t\ttarget: {\n\t\t\t\tname: field.name,\n\t\t\t\tvalue,\n\t\t\t},\n\t\t};\n\t\tfield.onChange(event);\n\t};\n\n\treturn (\n\t\t<Control\n\t\t\tlabel={label}\n\t\t\tlabelWidth={labelWidth}\n\t\t\tnoLabel={noLabel}\n\t\t\tnoStretch={noStretch}\n\t\t\tcomponent={(\n\t\t\t\t<LibSelect\n\t\t\t\t\t{...field}\n\t\t\t\t\t{...restProps}\n\t\t\t\t\tstyle={resStyle}\n\t\t\t\t\tonChange={onChangeValue}\n\t\t\t\t>\n\t\t\t\t\t{optionItems}\n\t\t\t\t</LibSelect>\n\t\t\t)}\n\t\t/>\n\t);\n};\n\nSelect.propTypes = {\n\t...propTypes,\n\toptions: PropTypes.arrayOf(PropTypes.shape({\n\t\tvalue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n\t\ttitle: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,\n\t})),\n\tstyle: PropTypes.object,\n};\n\nSelect.defaultProps = {\n\t...defaultProps,\n\toptions : [],\n\tstyle   : {},\n};\n\nexport default Select;\n","import Select from './Select';\n\nexport default Select;\nexport { Select };\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport { TextArea as LibTextArea } from '../../lib';\nimport { Control } from '../Control';\nimport { propTypes, defaultProps } from '../prop-types';\n\nconst TextArea = (props) => {\n\tconst {\n\t\tlabel,\n\t\tlabelWidth,\n\t\tnoLabel,\n\t\tnoStretch,\n\t\tfield,\n\t\tform,\n\t\trows,\n\t\tonChangeValue,\n\t\t...restProps\n\t} = props;\n\n\tconst onChange = (event) => {\n\t\tonChangeValue(event.target.value);\n\t\tfield.onChange(event);\n\t};\n\n\treturn (\n\t\t<Control\n\t\t\tlabel={label}\n\t\t\tlabelWidth={labelWidth}\n\t\t\tnoLabel={noLabel}\n\t\t\tnoStretch={noStretch}\n\t\t\tcomponent={(\n\t\t\t\t<LibTextArea\n\t\t\t\t\trows={rows}\n\t\t\t\t\t{...field}\n\t\t\t\t\t{...restProps}\n\t\t\t\t\tonChange={onChange}\n\t\t\t\t/>\n\t\t\t)}\n\t\t/>\n\t);\n};\n\nTextArea.propTypes = {\n\t...propTypes,\n\trows          : PropTypes.number,\n\tonChangeValue : PropTypes.func,\n};\n\nTextArea.defaultProps = {\n\t...defaultProps,\n\trows          : 10,\n\tonChangeValue : () => {}, // function(content: String): void\n};\n\nexport default TextArea;\n","import TextArea from './TextArea';\n\nexport default TextArea;\nexport { TextArea };\n","import styled from 'styled-components';\nimport { THEME } from '../../../constants/theme';\n\nconst { height } = THEME;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: ${height.historyToolbar}px;\n  \n  .left {\n\t\tdisplay: flex;\n\t\tjustify-content: flex-start;\n\t\talign-items: center;\n\t\tform {\n\t\t\tdisplay: flex;\n\t\t\tjustify-content: flex-start;\n\t\t\talign-items: center;\n\t\t\t\n\t\t\t.form-field, .ant-btn {\n\t\t\t\tmargin-right: 8px;\n\t\t\t}\n\t\t}\n\t}\n\t\n\t.right {\n\t\tdisplay: flex;\n\t\tjustify-content: flex-end;\n\t\talign-items: center;\n\t}\n`;\n","import React, { useRef } from 'react';\nimport * as PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Formik, Field, Form } from 'formik';\n\nimport historyActions from '../../../redux/history/actions';\nimport { selectEventTypesList, selectFilter } from '../../../redux/history/selectors';\n\nimport { Button } from '../../../components/lib';\nimport { Input, Select } from '../../../components/forms';\n\nimport { Wrapper } from './Toolbar.style';\n\nconst initialValues = {\n\teventType : '',\n\ttext      : '',\n};\n\nconst Toolbar = ({ eventTypes, messagesClear, filterDataSet, filterDataReset }) => {\n\n\tconst formRef = useRef({});\n\n\tconst onSubmit = (values, actions) => {\n\t\tfilterDataSet(values);\n\t\tactions.setSubmitting(false);\n\t};\n\n\tconst onReset = () => {\n\t\tif (formRef.current.resetForm) {\n\t\t\tformRef.current.resetForm();\n\t\t}\n\t\tfilterDataReset();\n\t};\n\n\tconst onClear = () => {\n\t\tmessagesClear();\n\t\tonReset();\n\t};\n\n\treturn (\n\t\t<Wrapper>\n\t\t\t<div className=\"left\">\n\t\t\t\t<Formik\n\t\t\t\t\tinitialValues={initialValues}\n\t\t\t\t\tonSubmit={onSubmit}\n\t\t\t\t\trender={({ isSubmitting, resetForm }) => {\n\t\t\t\t\t\tformRef.current.resetForm = resetForm;\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\tname=\"eventType\"\n\t\t\t\t\t\t\t\t\trender={(fieldProps) => (\n\t\t\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\t\t\tnoStretch\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Event:\"\n\t\t\t\t\t\t\t\t\t\t\toptions={eventTypes}\n\t\t\t\t\t\t\t\t\t\t\t{...fieldProps}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\tname=\"text\"\n\t\t\t\t\t\t\t\t\trender={(fieldProps) => (\n\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\tnoLabel\n\t\t\t\t\t\t\t\t\t\t\tnoStretch\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter search string\"\n\t\t\t\t\t\t\t\t\t\t\t{...fieldProps}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\t\t\t\t\thtmlType=\"submit\"\n\t\t\t\t\t\t\t\t\ticon=\"search\"\n\t\t\t\t\t\t\t\t\ttitle=\"Search\"\n\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\thtmlType=\"button\"\n\t\t\t\t\t\t\t\t\ticon=\"close\"\n\t\t\t\t\t\t\t\t\ttitle=\"Reset form\"\n\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\tonClick={onReset}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className=\"right\">\n\t\t\t\t<Button\n\t\t\t\t\ticon=\"delete\"\n\t\t\t\t\ttitle=\"Clear history\"\n\t\t\t\t\tonClick={onClear}\n\t\t\t\t>\n\t\t\t\t\tClear\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t</Wrapper>\n\t);\n};\n\nToolbar.displayName = 'HistoryToolbar';\n\nToolbar.propTypes = {\n\teventTypes       : PropTypes.arrayOf(PropTypes.shape({\n\t\tvalue: PropTypes.string,\n\t\ttitle: PropTypes.string,\n\t})).isRequired,\n\n\tfilter: PropTypes.shape({\n\t\teventType : PropTypes.string,\n\t\ttext      : PropTypes.string,\n\t}).isRequired,\n\n\tmessagesClear   : PropTypes.func.isRequired,\n\tfilterDataSet   : PropTypes.func.isRequired,\n\tfilterDataReset : PropTypes.func.isRequired,\n};\n\nconst mapState = (state) => {\n\treturn {\n\t\teventTypes : selectEventTypesList(state),\n\t\tfilter     : selectFilter(state),\n\t};\n};\n\nconst mapActions = {\n\tmessagesClear   : historyActions.messagesClear,\n\tfilterDataSet   : historyActions.filterDataSet,\n\tfilterDataReset : historyActions.filterDataReset,\n};\n\nexport default connect(\n\tmapState,\n\tmapActions\n)(Toolbar);\n","import Toolbar from './Toolbar';\n\nexport default Toolbar;\n","import styled from 'styled-components';\nimport { THEME } from '../../../../constants/theme';\n\nconst { bg, border } = THEME;\n\nexport const Wrapper = styled.div`\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: flex-start;\n\tpadding: 8px;\n\t\t\t\n\t&.right {\n\t\tflex-direction: row-reverse;\n\t}\n\t\n\t.content {\n\t\tposition: relative;\n\t\tpadding: 8px 16px;\n\t\tbackground-color: ${bg.mainContent};\n\t\tborder-radius: 8px;\n\t\tborder: 1px solid ${border.history};\n\t\t\n\t\t&::before {\n\t\t\tcontent: '';\n\t\t\tposition: absolute;\n\t\t\ttop: 14px;\n\t\t\twidth: 12px;\n\t\t\theight: 12px;\n\t\t\ttransform: rotate(45deg);\n\t\t\tbackground-color: ${bg.mainContent};\n\t\t\tborder: 1px solid transparent;\n\t\t}\n\t\t\n\t\t.tags {\n\t\t\tmargin-top: 8px;\n\t\t\tdisplay: flex;\n\t\t\tflex-direction: row;\n\t\t\tjustify-content: flex-start;\n\t\t\talign-items: center;\n\t\t}\n\t\t\n\t\t&.left {\n\t\t\tmargin-left: 8px;\n\t\t\tmargin-right: 0px;\n\t\t\t\n\t\t\t&::before {\n\t\t\t\tleft: -6px;\n\t\t\t\tborder-left-color: ${border.history};\n\t\t\t\tborder-bottom-color: ${border.history};\n\t\t\t}\n\t\t}\n\t\t\n\t\t&.right {\n\t\t\tmargin-left: 0px;\n\t\t\tmargin-right: 8px;\n\t\t\t\n\t\t\t&::before {\n\t\t\t\tright: -6px;\n\t\t\t\tborder-right-color: ${border.history};\n\t\t\t\tborder-top-color: ${border.history};\n\t\t\t}\n\t\t\t\n\t\t\t.tags {\n\t\t\t\tflex-direction: row-reverse;\n\t\t\t}\n\t\t}\n\t}\n`;\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { useTransition, animated } from 'react-spring';\nimport { connect } from 'react-redux';\n\nimport { selectMessage } from '../../../../redux/history/selectors';\nimport { MESSAGE_TYPES } from '../../../../constants/socket';\nimport { POSITION } from '../../../../constants/common';\n\nimport { Tag, Paragraph } from '../../../../components/lib';\nimport { Avatar } from '../../../../components/ui';\nimport { Wrapper } from './Message.style';\n\nconst ellipsis = { rows: 2, expandable: true };\n\nconst Message = ({ id, type, body, date, sender }) => {\n\n\tconst position = (sender === MESSAGE_TYPES.admin) ? POSITION.right : POSITION.left;\n\n\tconst blockClass = classnames('message-block', {\n\t\tleft  : (position === POSITION.left),\n\t\tright : (position === POSITION.right),\n\t});\n\tconst contentClass = classnames('content', {\n\t\tleft  : (position === POSITION.left),\n\t\tright : (position === POSITION.right),\n\t});\n\n\tconst transitions = useTransition(true, null, {\n\t\tfrom: { opacity: 0 },\n\t\tenter: { opacity: 1 },\n\t\tleave: { opacity: 0 },\n\t});\n\n\treturn transitions.map(({ item, key, props }) =>\n\t\titem && (\n\t\t\t<animated.div key={key} style={props}>\n\t\t\t\t<Wrapper className={blockClass} key={id}>\n\t\t\t\t\t<Avatar\n\t\t\t\t\t\ttype={sender}\n\t\t\t\t\t\tposition={position}\n\t\t\t\t\t/>\n\t\t\t\t\t<div className={contentClass}>\n\t\t\t\t\t\t<div className=\"message\">\n\t\t\t\t\t\t\t<Paragraph ellipsis={ellipsis} copyable>\n\t\t\t\t\t\t\t\t{body}\n\t\t\t\t\t\t\t</Paragraph>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"tags\">\n\t\t\t\t\t\t\t<Tag>{date}</Tag>\n\t\t\t\t\t\t\t<Tag color=\"geekblue\">{type}</Tag>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</Wrapper>\n\t\t\t</animated.div>\n\t\t));\n};\n\nMessage.propTypes = {\n\tid     : PropTypes.string.isRequired,\n\ttype   : PropTypes.string.isRequired,\n\tbody   : PropTypes.string.isRequired,\n\tdate   : PropTypes.string.isRequired,\n\tsender : PropTypes.string.isRequired,\n};\n\nconst mapState = (state, props) => {\n\n\tconst message = selectMessage(props.id)(state);\n\n\treturn {\n\t\ttype   : message.type,\n\t\tbody   : message.body,\n\t\tdate   : message.date,\n\t\tsender : message.sender,\n\t};\n};\n\nexport default connect(mapState)(Message);\n","import Message from './Message';\n\nexport default Message;\n","import styled from 'styled-components';\nimport { THEME, MIN_HEIGHTS } from '../../../constants/theme';\n\nconst { bg, border, margin } = THEME;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-self: stretch;\n  width: 100%;\n  height: 100%;\n  min-height: calc(100vh - ${MIN_HEIGHTS.historyList}px);\n  max-height: calc(100vh - ${MIN_HEIGHTS.historyList}px);\n  background-color: ${bg.panel};\n  margin-top: ${margin.historyList}px;\n  padding: 8px;\n  border-radius: 8px;\n  border: 1px solid ${border.history};\n  overflow-y: auto;\n`;\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { selectFilteredMessages } from '../../../redux/history/selectors';\n\nimport Message from './Message';\nimport { Wrapper } from './List.style';\n\nconst List = ({ messages }) => {\n\n\tconst items = messages.map(({ id }) => (\n\t\t<Message id={id} key={id} />\n\t));\n\n\treturn (\n\t\t<Wrapper>\n\t\t\t{items}\n\t\t</Wrapper>\n\t);\n};\n\nList.propTypes = {\n\tmessages: PropTypes.array,\n};\n\nList.defaultProps = {\n\tmessages: [],\n};\n\nconst mapState = (state) => {\n\n\treturn {\n\t\tmessages: selectFilteredMessages(state),\n\t};\n};\n\nexport default connect(mapState)(List);\n","import List from './List';\n\nexport default List;\n","import styled from 'styled-components';\nimport { THEME, MIN_HEIGHTS } from '../../constants/theme';\nimport { Layout } from '../../components/lib';\n\nconst { bg } = THEME;\n\nexport const Wrapper = styled(Layout)`\n\t&.ant-layout {\n  \tbackground-color: ${bg.mainContent};\n  \tmin-height: calc(100vh - ${MIN_HEIGHTS.historyContainer}px);\n  }\n`;\n","import React from 'react';\n\nimport { Title } from '../../components/lib';\nimport Toolbar from './Toolbar';\nimport List from './List';\nimport { Wrapper } from './History.style';\n\nconst HistoryContainer = () => {\n\treturn (\n\t\t<Wrapper>\n\t\t\t<Title level={4}>Events history</Title>\n\t\t\t<Toolbar />\n\t\t\t<List />\n\t\t</Wrapper>\n\t);\n};\n\nexport default HistoryContainer;\n","import { makeActionCreator } from '../utils';\n\nconst prefixOutcoming = 'Socket/Client/';\nconst prefixIncoming  = 'Socket/Server/';\nconst prefixInner = 'Socket/Inner/';\n\nconst TYPES = {\n  OUTCOMING_PING_ENABLED        : `${prefixOutcoming}ping-enabled`,\n  OUTCOMING_IMITATE_USERS       : `${prefixOutcoming}imitate-users`,\n  OUTCOMING_EMIT_EVENT          : `${prefixOutcoming}emit-event`,\n  OUTCOMING_SUBSCRIBE_ON_EVENT  : `${prefixOutcoming}subscribe-on-event`,\n  OUTCOMING_GET_SERVER_SETTINGS : `${prefixOutcoming}get-server-settings`,\n  OUTCOMING_GET_CONNECTED_USERS : `${prefixOutcoming}get-connected-users`,\n\n  INCOMING_SOCKET_STATUS        : `${prefixIncoming}socket-status`,\n  INCOMING_PING_CLIENT          : `${prefixIncoming}ping`,\n  INCOMING_EMIT_HISTORY         : `${prefixIncoming}emit-history`,\n  INCOMING_GET_SERVER_SETTINGS  : `${prefixIncoming}get-server-settings`,\n  INCOMING_CONNECTED_USERS      : `${prefixIncoming}connected-users`,\n  INCOMING_USER_CONNECTED       : `${prefixIncoming}user-connected`,\n\n  INNER_SOCKET_STATUS           : `${prefixInner}socket-status`,\n};\n\nconst actions = {\n  ...TYPES,\n\n  outcomingPingEnabled       : makeActionCreator(TYPES.OUTCOMING_PING_ENABLED, 'pingEnabled'),\n  outcomingImitateUsers      : makeActionCreator(TYPES.OUTCOMING_IMITATE_USERS, 'imitateUsers'),\n  outcomingEmitEvent         : makeActionCreator(TYPES.OUTCOMING_EMIT_EVENT, 'type', 'body'),\n  outcomingSubscribeOnEvent  : makeActionCreator(TYPES.OUTCOMING_SUBSCRIBE_ON_EVENT, 'type'),\n  outcomingGetServerSettings : makeActionCreator(TYPES.OUTCOMING_GET_SERVER_SETTINGS),\n  outcomingGetConnectedUsers : makeActionCreator(TYPES.OUTCOMING_GET_CONNECTED_USERS),\n\n  innerSocketStatus          : makeActionCreator(TYPES.INNER_SOCKET_STATUS, 'status'),\n};\n\nexport default actions;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: block;\n`;\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport appActions from '../../redux/app/actions';\nimport socketActions from '../../redux/socket/actions';\nimport { selectApp } from '../../redux/app/selectors';\n\nimport { Title, Checkbox } from '../../components/lib';\n\nimport { Wrapper } from './Settings.style';\n\nconst Settings = (props) => {\n\tconst {\n\t\tpingEnabled,\n\t\timitateUsers,\n\t\tappParamsSet,\n\t\toutcomingPingEnabled,\n\t\toutcomingImitateUsers,\n\t} = props;\n\n\tconst onChangePingEnabled = () => {\n\t\tappParamsSet({ pingEnabled: !pingEnabled });\n\t\toutcomingPingEnabled(!pingEnabled);\n\t};\n\n\tconst onChangeImitateUsers = () => {\n\t\tappParamsSet({ imitateUsers: !imitateUsers });\n\t\toutcomingImitateUsers(!imitateUsers);\n\t};\n\n\treturn (\n\t\t<Wrapper>\n\t\t\t<Title level={4}>Settings</Title>\n\t\t\t<Checkbox\n\t\t\t\tchecked={pingEnabled}\n\t\t\t\tonChange={onChangePingEnabled}\n\t\t\t>\n\t\t\t\tEnable ping from socket server\n\t\t\t</Checkbox>\n\t\t\t<Checkbox\n\t\t\t\tchecked={imitateUsers}\n\t\t\t\tdisabled={!pingEnabled}\n\t\t\t\tonChange={onChangeImitateUsers}\n\t\t\t>\n\t\t\t\tImitate users when ping from server\n\t\t\t</Checkbox>\n\t\t</Wrapper>\n\t);\n};\n\nSettings.propTypes = {\n\tpingEnabled           : PropTypes.bool.isRequired,\n\timitateUsers          : PropTypes.bool.isRequired,\n\tappParamsSet          : PropTypes.func.isRequired,\n\toutcomingPingEnabled  : PropTypes.func.isRequired,\n\toutcomingImitateUsers : PropTypes.func.isRequired,\n};\n\nconst mapState = (state) => {\n\tconst { pingEnabled, imitateUsers } = selectApp(state);\n\n\treturn {\n\t\tpingEnabled,\n\t\timitateUsers,\n\t};\n};\n\nconst mapActions = {\n\tappParamsSet          : appActions.appParamsSet,\n\toutcomingPingEnabled  : socketActions.outcomingPingEnabled,\n\toutcomingImitateUsers : socketActions.outcomingImitateUsers,\n};\n\nexport default connect(\n\tmapState,\n\tmapActions\n)(Settings);\n","import { createSelector } from 'reselect';\nimport { TransformsUtils } from '../../helpers/utils/TransformsUtils';\n\nconst eventData  = (state) => state.Emitter.eventData;\nconst eventTypes = (state) => state.Emitter.eventTypes;\nconst toolbar    = (state) => state.Emitter.toolbar;\n\nexport const selectEventData = createSelector(\n  [eventData],\n\teventData => eventData,\n);\n\nexport const selectEventTypes = createSelector(\n\t[eventTypes],\n\teventTypes => eventTypes,\n);\n\nexport const selectEventTypesList = createSelector(\n\t[selectEventTypes],\n\teventTypes => TransformsUtils.createSelectOptions(eventTypes),\n);\n\nexport const selectToolbar = createSelector(\n\t[toolbar],\n\ttoolbar => toolbar,\n);\n","import { object, string } from 'yup';\n\nconst schema = object().shape({\n\teventType: string().required('You have to select Event'),\n\teventData: string().default(() => ''),\n});\n\nexport function validateEvent(eventType, eventData) {\n\n\ttry {\n\t\tschema.validateSync({ eventType, eventData });\n\t} catch (e) {\n\t\treturn e.errors;\n\t}\n\n\treturn null;\n}\n","import { Message } from '../../components/lib';\n\nclass FeedbackUtils {\n\n\tstatic transform(messages) {\n\t\tif (!Array.isArray(messages)) {\n\t\t\treturn messages;\n\t\t}\n\n\t\treturn messages.join('\\n');\n\t};\n\n\tstatic showMessageError(message) {\n\t\tMessage.error(FeedbackUtils.transform(message), 5);\n\t};\n}\n\nexport default FeedbackUtils;\nexport { FeedbackUtils };\n","import { object, string } from 'yup';\n\nconst schema = object().shape({\n\tname: string().required('You have to specify name of the query'),\n\ttype: string().required('You have to select correct event type'),\n\tbody: string().required('You cannot save template without body'),\n});\n\nexport function validateQuery(query) {\n\n\ttry {\n\t\tschema.validateSync(query);\n\t} catch (e) {\n\t\treturn e.errors;\n\t}\n\n\treturn null;\n}\n","import styled from 'styled-components';\nimport { THEME } from '../../../constants/theme';\n\nconst { height } = THEME;\n\nexport const Wrapper = styled.div`\n\tdisplay: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: ${height.emitterToolbar}px;\n  \n  .ant-btn {\n  \tmargin-left: 8px;\n  }\n  \n  .left {\n\t\tdisplay: flex;\n\t\tjustify-content: flex-start;\n\t\talign-items: center;\n\t}\n\t\n\t.right {\n\t\tdisplay: flex;\n\t\tjustify-content: flex-end;\n\t\talign-items: center;\n\t\tform {\n\t\t\tdisplay: flex;\n\t\t\tjustify-content: flex-end;\n\t\t\talign-items: center;\n\t\t}\n\t}\n\t\n\t.visible {\n\t\topacity: 1;\n\t\ttransition: opacity .3s ease-in-out;\n\t}\n\t\n\t.non-visible {\n\t\topacity: 0;\n\t\ttransition: opacity .3s ease-in-out;\n\t}\n`;\n","import React, { useState } from 'react';\nimport * as PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { connect } from 'react-redux';\nimport { Formik, Field, Form } from 'formik';\n\nimport emitterActions from '../../../redux/emitter/actions';\nimport { selectEventTypesList, selectToolbar } from '../../../redux/emitter/selectors';\n\nimport { Button } from '../../../components/lib';\nimport { Input, Select } from '../../../components/forms';\n\nimport { Wrapper } from './Toolbar.style';\n\nconst Toolbar = ({ eventType, eventTypes, toolbarParamsSet, eventTypeAdd }) => {\n\n\tconst [formVisible, setFormVisible] = useState(false);\n\n\tconst onSubmit = (values, actions) => {\n\t\tconst { newEventType } = values;\n\n\t\teventTypeAdd(newEventType);\n\t\tsetFormVisible(false);\n\t\ttoolbarParamsSet({ eventType: newEventType });\n\n\t\tactions.setSubmitting(false);\n\t};\n\n\tconst onChangeEventType = (event) => {\n\t\tconst { target: { value } } = event;\n\t\ttoolbarParamsSet({ eventType: value });\n\t};\n\n\tconst btnClass = classnames({\n\t\t'visible': !formVisible,\n\t\t'non-visible': formVisible,\n\t});\n\tconst formClass = classnames('right', {\n\t\t'visible': formVisible,\n\t\t'non-visible': !formVisible,\n\t});\n\n\treturn (\n\t\t<Wrapper>\n\t\t\t<div className=\"left\">\n\t\t\t\t<Select\n\t\t\t\t\tnoStretch\n\t\t\t\t\tlabel=\"Event:\"\n\t\t\t\t\toptions={eventTypes}\n\t\t\t\t\tfield={{\n\t\t\t\t\t\tname: 'eventType',\n\t\t\t\t\t\tvalue: eventType,\n\t\t\t\t\t\tonChange: onChangeEventType,\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<Button\n\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\ticon=\"plus\"\n\t\t\t\t\ttitle=\"Add new event\"\n\t\t\t\t\tclassName={btnClass}\n\t\t\t\t\tonClick={() => setFormVisible(true)}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className={formClass}>\n\t\t\t\t<Formik\n\t\t\t\t\tinitialValues={{ newEventType: '' }}\n\t\t\t\t\tonSubmit={onSubmit}\n\t\t\t\t\trender={({ isSubmitting }) => (\n\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\tname=\"newEventType\"\n\t\t\t\t\t\t\t\trender={(props) => (<Input {...props} placeholder=\"Enter new event\" />)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\t\t\t\thtmlType=\"submit\"\n\t\t\t\t\t\t\t\ticon=\"check\"\n\t\t\t\t\t\t\t\ttitle=\"Save new event\"\n\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t)}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</Wrapper>\n\t);\n};\n\nToolbar.displayName = 'EmitterToolbar';\n\nToolbar.propTypes = {\n\teventType        : PropTypes.string,\n\teventTypes       : PropTypes.arrayOf(PropTypes.shape({\n\t\tvalue: PropTypes.string,\n\t\ttitle: PropTypes.string,\n\t})).isRequired,\n\n\teventTypeAdd     : PropTypes.func.isRequired,\n\ttoolbarParamsSet : PropTypes.func.isRequired,\n};\n\nToolbar.defaultProps = {\n\teventType: '',\n};\n\nconst mapState = (state) => {\n\tconst { eventType } = selectToolbar(state);\n\n\treturn {\n\t\teventType,\n\t\teventTypes: selectEventTypesList(state),\n\t};\n};\n\nconst mapActions = {\n\teventTypeAdd     : emitterActions.eventTypeAdd,\n\ttoolbarParamsSet : emitterActions.toolbarParamsSet,\n};\n\nexport default connect(\n\tmapState,\n\tmapActions\n)(Toolbar);\n","import Toolbar from './Toolbar';\n\nexport default Toolbar;\n","import styled from 'styled-components';\nimport { THEME } from '../../../constants/theme';\n\nconst { text, border } = THEME;\n\nexport const Wrapper = styled.div`\n  display: block;\n  padding: 4px 8px;\n  color: ${text.hint};\n  border: 1px solid ${border.history};\n  border-left: 6px solid ${border.hint};\n  border-radius: 4px;\n  margin-bottom: 8px;\n  margin-top: 8px;\n`;\n","import Hint from './Hint';\n\nexport default Hint;\nexport { Hint };\n","import React from 'react';\nimport { Wrapper } from './Hint.style';\n\nconst Hint = () => {\n\treturn (\n\t\t<Wrapper>\n\t\t\tHint: you can emit event with empty body to subscribe on that type of events\n\t\t</Wrapper>\n\t);\n};\n\nexport default Hint;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n\tdisplay: block;\n\t\n\tform {\n\t\tmargin-top: 8px;\n\t\t\n\t\t.buttons {\n\t\t\tdisplay: flex;\n\t\t\tjustify-content: space-between;\n\t\t\tmargin-top: 8px;\n\t\t\t\n\t\t\t.left {\n\t\t\t\tdisplay: flex;\n\t\t\t\tjustify-content: flex-start;\n\t\t\t\talign-items: center;\n\t\t\t\t.ant-btn {\n\t\t\t\t\tmargin-right: 8px;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t.right {\n\t\t\t\tdisplay: flex;\n\t\t\t\tjustify-content: flex-end;\n\t\t\t}\n\t\t}\n\t}\n`;\n","import React, { useRef } from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Formik, Field, Form } from 'formik';\nimport { connect } from 'react-redux';\n\nimport emitterActions from '../../redux/emitter/actions';\nimport socketActions from '../../redux/socket/actions';\nimport queriesActions from '../../redux/queries/actions';\nimport { selectToolbar, selectEventData } from '../../redux/emitter/selectors';\nimport { selectModal, selectQuery } from '../../redux/queries/selectors';\n\nimport { validateEvent } from '../../helpers/validators/emitter';\nimport { FeedbackUtils } from '../../helpers/utils/FeedbackUtils';\nimport { TransformsUtils } from '../../helpers/utils/TransformsUtils';\nimport { validateQuery } from '../../helpers/validators/query';\n\nimport { Title, Button } from '../../components/lib';\nimport { TextArea } from '../../components/forms';\nimport Toolbar from './Toolbar';\nimport Hint from './Hint';\n\nimport { Wrapper } from './Emitter.style';\n\nconst Emitter = (props) => {\n\tconst {\n\t\teventType,\n\t\teventData,\n\t\tqueryID,\n\t\tqueryName,\n\t\teventDataSet,\n\t\ttoolbarParamsSet,\n\t\temitEvent,\n\t\tsubscribeOnEvent,\n\t\tmodalDataSet,\n\t\tquerySave,\n\t} = props;\n\n\tconst formRef = useRef({});\n\n\tconst onSubmit = (values, actions) => {\n\t\tconst { eventData } = values;\n\t\tconst errors = validateEvent(eventType, eventData);\n\t\tif (errors) {\n\t\t\tFeedbackUtils.showMessageError(errors);\n\t\t\tactions.setSubmitting(false);\n\t\t\treturn;\n\t\t}\n\n\t\teventDataSet(eventData);\n\n\t\tif (eventData) {\n\t\t\temitEvent(eventType, TransformsUtils.convertEventData(eventData));\n\t\t} else {\n\t\t\tsubscribeOnEvent(eventType);\n\t\t}\n\n\t\tsetTimeout(() => {\n\t\t\tactions.setSubmitting(false);\n\t\t}, 500);\n\t};\n\n\tconst onClickSaveAs = () => {\n\t\tconst { eventData } = formRef.current.values;\n\t\tconst modal = {\n\t\t\tqueryID : '',\n\t\t\ttype    : eventType,\n\t\t\tbody    : eventData,\n\t\t\tname    : '',\n\t\t\tvisible : true,\n\t\t};\n\n\t\tmodalDataSet(modal);\n\t};\n\n\tconst onClickSave = () => {\n\t\tif (!queryID) {\n\t\t\tonClickSaveAs();\n\t\t\treturn;\n\t\t}\n\n\t\tconst { eventData } = formRef.current.values;\n\t\tconst query = {\n\t\t\ttype : eventType,\n\t\t\tbody : eventData,\n\t\t\tname : queryName,\n\t\t\tid   : queryID,\n\t\t};\n\n\t\tconst errors = validateQuery(query);\n\t\tif (errors) {\n\t\t\tFeedbackUtils.showMessageError(errors);\n\t\t\treturn;\n\t\t}\n\n\t\tquerySave(query);\n\t};\n\n\n\tconst onClickNew = () => {\n\t\teventDataSet('');\n\t\ttoolbarParamsSet({ eventType: '' });\n\t\tmodalDataSet({ queryID: '' });\n\t};\n\n\treturn (\n\t\t<Wrapper>\n\t\t\t<Title level={4}>Emit events</Title>\n\t\t\t<Toolbar />\n\t\t\t<Formik\n\t\t\t\tenableReinitialize\n\t\t\t\tinitialValues={{ eventData }}\n\t\t\t\tonSubmit={onSubmit}\n\t\t\t\trender={({ isSubmitting, values }) => {\n\t\t\t\t\tformRef.current.values = values;\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\tname=\"eventData\"\n\t\t\t\t\t\t\t\trender={(fieldProps) => (\n\t\t\t\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\t\t\t\tnoLabel\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter event data here\"\n\t\t\t\t\t\t\t\t\t\t{...fieldProps}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Hint />\n\t\t\t\t\t\t\t<div className=\"buttons\">\n\t\t\t\t\t\t\t\t<div className=\"left\">\n\t\t\t\t\t\t\t\t\t{queryID && (\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\thtmlType=\"button\"\n\t\t\t\t\t\t\t\t\t\t\ticon=\"plus\"\n\t\t\t\t\t\t\t\t\t\t\ttitle=\"Create new empty event\"\n\t\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\t\t\tonClick={onClickNew}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tNew\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\thtmlType=\"button\"\n\t\t\t\t\t\t\t\t\t\ticon=\"save\"\n\t\t\t\t\t\t\t\t\t\ttitle=\"Save current event as template\"\n\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\t\tonClick={onClickSave}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tSave\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t{queryID && (\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\thtmlType=\"button\"\n\t\t\t\t\t\t\t\t\t\t\ticon=\"save\"\n\t\t\t\t\t\t\t\t\t\t\ttitle=\"Save current template as new one\"\n\t\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\t\t\tonClick={onClickSaveAs}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tSave as...\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"right\">\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\t\t\t\t\t\thtmlType=\"submit\"\n\t\t\t\t\t\t\t\t\t\ticon=\"cloud-upload\"\n\t\t\t\t\t\t\t\t\t\ttitle=\"Emit event to socket server\"\n\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tSend\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t);\n\t\t\t\t}}\n\t\t\t/>\n\t\t</Wrapper>\n\t);\n};\n\nEmitter.propTypes = {\n\teventType        : PropTypes.string.isRequired,\n\teventData        : PropTypes.string.isRequired,\n\tqueryID          : PropTypes.string.isRequired,\n\tqueryName        : PropTypes.string.isRequired,\n\teventDataSet     : PropTypes.func.isRequired,\n\ttoolbarParamsSet : PropTypes.func.isRequired,\n\temitEvent        : PropTypes.func.isRequired,\n\tsubscribeOnEvent : PropTypes.func.isRequired,\n\tmodalDataSet     : PropTypes.func.isRequired,\n\tquerySave        : PropTypes.func.isRequired,\n};\n\nconst mapState = (state) => {\n\tconst { eventType } = selectToolbar(state);\n\tconst { queryID } = selectModal(state);\n\n\treturn {\n\t\teventType,\n\t\tqueryID,\n\t\tqueryName: selectQuery(queryID, {}).name,\n\t\teventData: selectEventData(state),\n\t};\n};\n\nconst mapActions = {\n\teventDataSet     : emitterActions.eventDataSet,\n\ttoolbarParamsSet : emitterActions.toolbarParamsSet,\n\temitEvent        : socketActions.outcomingEmitEvent,\n\tsubscribeOnEvent : socketActions.outcomingSubscribeOnEvent,\n\tmodalDataSet     : queriesActions.modalDataSet,\n\tquerySave        : queriesActions.querySave,\n};\n\nexport default connect(\n\tmapState,\n\tmapActions\n)(Emitter);\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: block;\n  .form-field {\n  \tmargin-bottom: 8px;\n  \t&:last-child {\n  \t\tmargin-bottom: 0;\n  \t}\n  }\n`;\n","import React, { useRef } from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Formik, Field, Form } from 'formik';\nimport { connect } from 'react-redux';\n\nimport queriesActions from '../../redux/queries/actions';\nimport { selectModal } from '../../redux/queries/selectors';\n\nimport { Modal } from '../../components/lib';\nimport { Input, TextArea } from '../../components/forms';\n\nimport { validateQuery } from '../../helpers/validators/query';\nimport { FeedbackUtils } from '../../helpers/utils/FeedbackUtils';\n\nimport { Wrapper } from './Query.style';\n\nconst Query = (props) => {\n\tconst {\n\t\tvisible,\n\t\tqueryID,\n\t\ttype,\n\t\tbody,\n\t\tname,\n\t\tquerySave,\n\t\tmodalDataReset,\n\t} = props;\n\n\tconst formRef = useRef({});\n\tconst initValues = {\n\t\ttype,\n\t\tbody,\n\t\tname,\n\t};\n\n\tconst onSubmit = (values, actions) => {\n\t\tconst query = {\n\t\t\ttype,\n\t\t\tbody,\n\t\t\tname : values.name,\n\t\t\tid   : queryID,\n\t\t};\n\n\t\tconst errors = validateQuery(query);\n\t\tif (errors) {\n\t\t\tFeedbackUtils.showMessageError(errors);\n\t\t\treturn;\n\t\t}\n\n\t\tquerySave(query);\n\n\t\tactions.setSubmitting(false);\n\t\tmodalDataReset();\n\t\tformRef.current.resetForm(initValues);\n\t};\n\n\tconst onSave = () => {\n\t\tformRef.current.submitForm();\n\t};\n\n\tconst onCancel = () => {\n\t\tformRef.current.resetForm(initValues);\n\t\tmodalDataReset();\n\t};\n\n\treturn (\n\t\t<Modal\n\t\t\ttitle=\"Save event as template\"\n\t\t\tvisible={visible}\n\t\t\twidth=\"40%\"\n\t\t\tokText=\"Save\"\n\t\t\tonOk={onSave}\n\t\t\tonCancel={onCancel}\n\t\t>\n\t\t\t<Wrapper>\n\t\t\t\t<Formik\n\t\t\t\t\tenableReinitialize\n\t\t\t\t\tinitialValues={initValues}\n\t\t\t\t\tonSubmit={onSubmit}\n\t\t\t\t\trender={({ resetForm, submitForm }) => {\n\t\t\t\t\t\tformRef.current.resetForm = resetForm;\n\t\t\t\t\t\tformRef.current.submitForm = submitForm;\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\t\t\trender={(fieldProps) => (\n\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Name:\"\n\t\t\t\t\t\t\t\t\t\t\tlabelWidth={15}\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter template name here\"\n\t\t\t\t\t\t\t\t\t\t\t{...fieldProps}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\tname=\"type\"\n\t\t\t\t\t\t\t\t\trender={(fieldProps) => (\n\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t\t\t\t\t\tlabelWidth={15}\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Type:\"\n\t\t\t\t\t\t\t\t\t\t\t{...fieldProps}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\tname=\"body\"\n\t\t\t\t\t\t\t\t\trender={(fieldProps) => (\n\t\t\t\t\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\t\t\t\t\tnoLabel\n\t\t\t\t\t\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t\t\t\t\t\trows={3}\n\t\t\t\t\t\t\t\t\t\t\t{...fieldProps}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</Wrapper>\n\t\t</Modal>\n\t);\n};\n\nQuery.propTypes = {\n\tvisible        : PropTypes.bool.isRequired,\n\tqueryID        : PropTypes.string.isRequired,\n\ttype           : PropTypes.string.isRequired,\n\tbody           : PropTypes.string.isRequired,\n\tname           : PropTypes.string.isRequired,\n\tquerySave      : PropTypes.func.isRequired,\n\tmodalDataReset : PropTypes.func.isRequired,\n};\n\nconst mapState = (state) => {\n\tconst modal = selectModal(state);\n\treturn {\n\t\t...modal,\n\t};\n};\n\nconst mapActions = {\n\tquerySave      : queriesActions.querySave,\n\tmodalDataReset : queriesActions.modalDataReset,\n};\n\nexport default connect(\n\tmapState,\n\tmapActions\n)(Query);\n","import Query from './Query';\n\nexport default Query;\nexport { Query };\n","import styled from 'styled-components';\nimport { MIN_HEIGHTS } from '../../constants/theme';\n\nexport const LeftWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: stretch;\n  min-height: calc(100vh - ${MIN_HEIGHTS.leftContainer}px);\n`;\n","import React, { PureComponent } from 'react';\nimport * as PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport appActions from '../../redux/app/actions';\nimport { selectApp } from '../../redux/app/selectors';\n\nimport { Layout, Row, Col } from '../../components/lib';\nimport { MainContent, MainLayout } from '../../components/layouts';\nimport { Header } from '../../containers/Header';\nimport { Footer } from '../../containers/Footer';\nimport { Sidebar } from '../../containers/Sidebar';\nimport { HistoryContainer } from '../../containers/History';\nimport { Settings } from '../../containers/Settings';\nimport { Emitter } from '../../containers/Emitter';\nimport { Query } from '../../modals';\n\nimport { LeftWrapper } from './Root.style';\n\nclass Root extends PureComponent {\n\n\tstatic propTypes = {\n\t\tappStarted : PropTypes.bool.isRequired,\n\t\tappStart   : PropTypes.func.isRequired,\n\t};\n\n\tcomponentDidMount() {\n\t\tconst { appStart } = this.props;\n\t\tappStart();\n\t}\n\n\trender() {\n\t\tconst { appStarted } = this.props;\n\t\tif (!appStarted) {\n\t\t\treturn <MainLayout />;\n\t\t}\n\n\t\treturn (\n\t\t\t<MainLayout>\n\t\t\t\t<Sidebar />\n\t\t\t\t<Layout>\n\t\t\t\t\t<Header />\n\t\t\t\t\t<MainContent>\n\t\t\t\t\t\t<Row gutter={16}>\n\t\t\t\t\t\t\t<Col span={12}>\n\t\t\t\t\t\t\t\t<LeftWrapper>\n\t\t\t\t\t\t\t\t\t<Emitter />\n\t\t\t\t\t\t\t\t\t<Settings />\n\t\t\t\t\t\t\t\t</LeftWrapper>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t<Col span={12}>\n\t\t\t\t\t\t\t\t<HistoryContainer />\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</MainContent>\n\t\t\t\t\t<Query />\n\t\t\t\t\t<Footer />\n\t\t\t\t</Layout>\n\t\t\t</MainLayout>\n\t\t);\n\t}\n}\n\nconst mapState = state => {\n\tconst { appStarted } = selectApp(state);\n\n\treturn {\n\t\tappStarted,\n\t};\n};\n\nconst mapActions = {\n\tappStart: appActions.appStart,\n};\n\nexport default connect(\n\tmapState,\n\tmapActions\n)(Root);\n","import Root from './Root';\n\nexport default Root;\nexport { Root };","import io from 'socket.io-client';\nimport { socketConnectionString, adminHash } from '../config';\n\nconst options = {\n\ttransports: ['websocket'],\n\tquery: { adminHash },\n};\n\nconst socket = io(socketConnectionString, options);\n\nexport default socket;\nexport { socket };\n","import Immutable from 'seamless-immutable';\nimport { cloneDeep } from '../lodash';\n\nclass CommonUtils {\n\n\tstatic safeMerge(target, source, addNewKeys = false) {\n\t\tconst sourceKeys = Object.keys(source);\n\t\tconst targetKeys = !addNewKeys ? Object.keys(target) : sourceKeys;\n\t\tconst isImmutable = Immutable.isImmutable(target);\n\n\t\tlet result = isImmutable ? target : cloneDeep(target);\n\n\t\ttargetKeys.forEach(key => {\n\t\t\tconst isValueExist = sourceKeys.includes(key);\n\t\t\tif (!isValueExist) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst value = source[key];\n\n\t\t\tif (isImmutable) {\n\t\t\t\tresult = Immutable.set(result, key, value);\n\t\t\t} else {\n\t\t\t\tresult[key] = value;\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n}\n\nexport default CommonUtils;\nexport { CommonUtils };\n","import Immutable from 'seamless-immutable';\n\nimport CommonUtils from '../../helpers/utils/CommonUtils';\nimport { SOCKET_STATUS } from '../../constants/socket';\n\nimport actions from './actions';\n\nconst initState = Immutable.from({\n  app: {\n    appStarted   : false,\n    pingEnabled  : false,\n    imitateUsers : false,\n  },\n  socket: {\n    address        : '',\n    options        : '',\n    status         : SOCKET_STATUS.disconnected,\n    connectedUsers : [],\n  },\n});\n\nexport default function appReducer(state = initState, { type, payload }) {\n  switch (type) {\n    case actions.APP_PARAMS_SET: {\n      const result = CommonUtils.safeMerge(state.app, payload.app);\n      return Immutable.set(state, 'app', result);\n    }\n    case actions.SOCKET_PARAMS_SET: {\n      const result = CommonUtils.safeMerge(state.socket, payload.socket);\n      return Immutable.set(state, 'socket', result);\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import Immutable from 'seamless-immutable';\n\nimport CommonUtils from '../../helpers/utils/CommonUtils';\nimport { compact } from '../../helpers/lodash';\nimport { EVENT_TYPES } from '../../constants/socket';\nimport actions from './actions';\n\nconst initState = Immutable.from({\n  eventData: '',\n\n  eventTypes: [\n    EVENT_TYPES.get,\n    EVENT_TYPES.post,\n    EVENT_TYPES.ping,\n  ],\n\n  toolbar: {\n    eventType    : '',\n    newEventType : '',\n  },\n});\n\nexport default function emitterReducer(state = initState, { type, payload }) {\n  switch (type) {\n    case actions.EVENT_DATA_SET: {\n      return Immutable.set(state, 'eventData', payload.eventData);\n    }\n    case actions.EVENT_TYPES_SET: {\n      return Immutable.set(state, 'eventTypes', payload.eventTypes);\n    }\n    case actions.EVENT_TYPE_ADD: {\n      const result = compact(state.eventTypes.concat(payload.eventType));\n      return Immutable.set(state, 'eventTypes', result);\n    }\n    case actions.TOOLBAR_PARAMS_SET: {\n      const result = CommonUtils.safeMerge(state.toolbar, payload.toolbar);\n      return Immutable.set(state, 'toolbar', result);\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import Immutable from 'seamless-immutable';\n\nimport CommonUtils from '../../helpers/utils/CommonUtils';\nimport { EVENT_TYPES } from '../../constants/socket';\nimport actions from './actions';\n\nconst initState = Immutable.from({\n  messages: [],\n\n  eventTypes: [\n    EVENT_TYPES.get,\n    EVENT_TYPES.post,\n    EVENT_TYPES.ping,\n  ],\n\n  filter: {\n    eventType : '',\n    text      : '',\n  }\n});\n\nexport default function historyReducer(state = initState, { type, payload }) {\n  switch (type) {\n    case actions.MESSAGE_ADD: {\n      const result = state.messages.concat(payload.message);\n      return Immutable.set(state, 'messages', result);\n    }\n    case actions.MESSAGES_CLEAR: {\n      return Immutable.set(state, 'messages', []);\n    }\n    case actions.EVENT_TYPE_ADD: {\n      const result = state.eventTypes.concat(payload.eventType);\n      return Immutable.set(state, 'eventTypes', result);\n    }\n    case actions.EVENT_TYPES_CLEAR: {\n      return Immutable.set(state, 'messages', initState.eventTypes);\n    }\n    case actions.FILTER_DATA_SET: {\n      const result = CommonUtils.safeMerge(state.filter, payload.filter);\n      return Immutable.set(state, 'filter', result);\n    }\n    case actions.FILTER_DATA_RESET: {\n      return Immutable.set(state, 'filter', initState.filter);\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import Immutable from 'seamless-immutable';\n\nimport CommonUtils from '../../helpers/utils/CommonUtils';\nimport actions from './actions';\n\nconst initState = Immutable.from({\n  queries: [],\n\n  modal: {\n    visible : false,\n    queryID : '',\n    type    : '',\n    body    : '',\n    name    : '',\n  },\n});\n\nexport default function queriesReducer(state = initState, { type, payload }) {\n  switch (type) {\n    case actions.QUERIES_SET: {\n      return Immutable.set(state, 'queries', payload.queries);\n    }\n    case actions.MODAL_DATA_SET: {\n      const result = CommonUtils.safeMerge(state.modal, payload.modal);\n      return Immutable.set(state, 'modal', result);\n    }\n    case actions.MODAL_DATA_RESET: {\n      const { queryID } = state.modal;\n      const result = {\n        ...initState.modal,\n        queryID,\n      };\n      return Immutable.set(state, 'modal', result);\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import { combineReducers } from 'redux';\n\nimport App from './app/reducer';\nimport Emitter from './emitter/reducer';\nimport HistoryReducer from './history/reducer';\nimport Queries from './queries/reducer';\n\nexport default combineReducers({\n\tApp,\n\tEmitter,\n\tHistory: HistoryReducer,\n\tQueries,\n});\n","import { all, takeLatest, put } from 'redux-saga/effects';\n\nimport queriesActions from '../queries/actions';\nimport actions from './actions';\n\nfunction* appStart() {\n  yield put(queriesActions.queriesRestore());\n  yield put(actions.appParamsSet({ appStarted: true }));\n}\n\nexport default function* appSaga() {\n  yield all([\n    takeLatest(actions.APP_START, appStart),\n  ]);\n}\n","import { STORAGE_KEYS } from '../../constants/common';\n\nclass StorageUtils {\n\n\t// Common\n\tstatic storeValue(key, value) {\n\t\tlocalStorage.setItem(key, JSON.stringify(value));\n\t}\n\n\tstatic restoreValue(key, defaultValue = null) {\n\t\tconst value = localStorage.getItem(key);\n\t\ttry {\n\t\t\tconst parsedValue = JSON.parse(value);\n\t\t\treturn parsedValue || defaultValue;\n\t\t} catch (e) {\n\t\t\treturn defaultValue;\n\t\t}\n\t}\n\n\t// Queries\n\tstatic storeQueries(queries) {\n\t\tStorageUtils.storeValue(STORAGE_KEYS.queries, queries);\n\t}\n\n\tstatic restoreQueries() {\n\t\treturn StorageUtils.restoreValue(STORAGE_KEYS.queries, []);\n\t}\n}\n\nexport default StorageUtils;\nexport { StorageUtils };\n","import uuid from 'uuid/v4';\nimport { all, takeLatest, put, select, call } from 'redux-saga/effects';\n\nimport { findIndex } from '../../helpers/lodash';\nimport { StorageUtils } from '../../helpers/utils/StorageUtils';\n\nimport emitterActions from '../emitter/actions';\nimport { selectEventTypes } from '../emitter/selectors';\n\nimport actions from './actions';\nimport { selectQueries } from './selectors';\n\nfunction* querySave({ payload }) {\n\n  const { query } = payload;\n  const { id } = query;\n  if (!id) {\n    query.id = uuid();\n  }\n\n  const queries = yield select(selectQueries);\n  const result = [...queries];\n  if (id) {\n    const index = findIndex(queries, { id });\n    result[index] = query;\n  } else {\n    result.push(query);\n  }\n\n  yield call(StorageUtils.storeQueries, result);\n  yield put(actions.queriesSet(result));\n  yield put(actions.modalDataSet({ queryID: query.id }));\n}\n\nfunction* queryRemove({ payload }) {\n\n  const { id } = payload;\n\n  const queries = yield select(selectQueries);\n  const result = queries.filter(query => query.id !== id);\n\n  yield call(StorageUtils.storeQueries, result);\n  yield put(actions.queriesSet(result));\n  yield put(actions.modalDataSet({ queryID: '' }));\n}\n\nfunction* queriesRestore() {\n  const queries = yield call(StorageUtils.restoreQueries);\n  yield put(actions.queriesSet(queries));\n  yield put(actions.modalDataSet({ queryID: '' }));\n\n  // add custom event's types to emitter's types list\n  const eventTypes = yield select(selectEventTypes);\n  const queriesTypes = queries\n    .map(query => query.type)\n    .filter(type => !eventTypes.includes(type));\n\n  if (queriesTypes.length) {\n    const result = [...new Set([...eventTypes, ...queriesTypes])];\n    yield put(emitterActions.eventTypesSet(result));\n  }\n}\n\nexport default function* appSaga() {\n  yield all([\n    takeLatest(actions.QUERY_SAVE, querySave),\n    takeLatest(actions.QUERY_REMOVE, queryRemove),\n    takeLatest(actions.QUERIES_RESTORE, queriesRestore),\n  ]);\n}\n","export const FORMATS = Object.freeze({\n\tfullDateTime: 'YYYY-MM-DD HH:mm:ss',\n});\n","import { FORMATS } from '../constants/formats';\nimport { parse, format } from './date-fns';\n\nclass Formatter {\n\tstatic parseDate(date = null, defaultValue = null) {\n\t\tif (!date) {\n\t\t\treturn defaultValue || new Date();\n\t\t}\n\t\tif (date instanceof Date) {\n\t\t\treturn date;\n\t\t}\n\t\ttry {\n\t\t\treturn parse(date);\n\t\t} catch (e) {\n\t\t\tif (defaultValue) {\n\t\t\t\treturn defaultValue;\n\t\t\t}\n\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\tstatic fullDateTime(date = null) {\n\t\tconst resDate = Formatter.parseDate(date, new Date());\n\t\treturn format(resDate, FORMATS.fullDateTime);\n\t}\n}\n\nexport default Formatter;\nexport { Formatter };\n","import uuid from 'uuid/v4';\n\nimport { MESSAGE_TYPES } from '../../constants/socket';\nimport Formatter from '../Formatter';\n\nclass MessagesUtils {\n\n\tstatic createPingMessage(message) {\n\t\treturn {\n\t\t\t...message,\n\t\t\tid      : uuid(),\n\t\t\tdate    : Formatter.fullDateTime(),\n\t\t};\n\t}\n\n\tstatic createHistoryMessage(payload) {\n\t\treturn {\n\t\t\tid     : uuid(),\n\t\t\tdate   : Formatter.fullDateTime(),\n\t\t\ttype   : payload.type || 'NULL',\n\t\t\tsender : payload.sender || MESSAGE_TYPES.server,\n\t\t\tbody   : JSON.stringify(payload.body),\n\t\t};\n\t}\n}\n\nexport default MessagesUtils;\nexport { MessagesUtils };\n","import { all, takeLatest, takeEvery, put, select } from 'redux-saga/effects';\n\nimport MessagesUtils from '../../helpers/utils/MessagesUtils';\n\nimport { selectSocket } from '../app/selectors';\nimport { selectEventTypes as selectHistoryEventTypes } from '../history/selectors';\nimport { selectEventTypes as selectEmitterEventTypes } from '../emitter/selectors';\n\nimport appActions from '../app/actions';\nimport historyActions from '../history/actions';\nimport emitterActions from '../emitter/actions';\nimport actions from './actions';\n\n// Inners -----------------------------------------------------------------------------------------\nfunction* innerSocketStatus({ payload }) {\n  const { status } = payload;\n  yield put(appActions.socketParamsSet({ status }));\n}\n\n// Incoming ---------------------------------------------------------------------------------------\nfunction* incomingPing({ payload }) {\n  const { message } = payload;\n  const historyMessage = MessagesUtils.createPingMessage(message);\n  yield put(historyActions.messageAdd(historyMessage));\n}\n\nfunction* incomingEmitHistory({ payload }) {\n  const message = MessagesUtils.createHistoryMessage(payload);\n  const { type } = message;\n\n  const eventTypes = yield select(selectHistoryEventTypes);\n  if (!eventTypes.includes(type)) {\n    yield put(historyActions.eventTypeAdd(type));\n  }\n\n  yield put(historyActions.messageAdd(message));\n}\n\nfunction* incomingConnectedUsers({ payload }) {\n  const { users } = payload;\n  yield put(appActions.socketParamsSet({ connectedUsers: users }));\n}\n\nfunction* incomingUserConnected({ payload }) {\n  const { id, connected, handshake } = payload;\n  let { connectedUsers } = yield select(selectSocket);\n\n  if (connected) {\n    connectedUsers = connectedUsers.concat({\n      id,\n      connected,\n      handshake,\n    });\n  } else {\n    connectedUsers = connectedUsers.filter(user => user.id !== id);\n  }\n\n  yield put(appActions.socketParamsSet({ connectedUsers }));\n}\n\nfunction* incomingServerSettings({ payload }) {\n  const { settings } = payload;\n  const { pingEnabled, imitateUsers, subscribeTypes } = settings;\n\n  yield put(appActions.appParamsSet({ pingEnabled, imitateUsers }));\n\n  const eventTypes = yield select(selectEmitterEventTypes);\n  const result = [...new Set([...eventTypes, ...subscribeTypes])];\n\n  yield put(emitterActions.eventTypesSet(result));\n}\n\nexport default function* socketSaga() {\n  yield all([\n    takeLatest(actions.INNER_SOCKET_STATUS, innerSocketStatus),\n    takeLatest(actions.INCOMING_PING_CLIENT, incomingPing),\n    takeLatest(actions.INCOMING_GET_SERVER_SETTINGS, incomingServerSettings),\n    takeLatest(actions.INCOMING_CONNECTED_USERS, incomingConnectedUsers),\n\n    takeEvery(actions.INCOMING_EMIT_HISTORY, incomingEmitHistory),\n    takeEvery(actions.INCOMING_USER_CONNECTED, incomingUserConnected),\n  ]);\n}\n","import { all, fork } from 'redux-saga/effects';\n\nimport appSaga from './app/saga';\nimport queriesSaga from './queries/saga';\nimport socketSaga from './socket/saga';\n\nexport default function* rootSaga() {\n\tyield all([\n\t\tfork(appSaga),\n\t\tfork(socketSaga),\n\t\tfork(queriesSaga),\n\t]);\n}\n","import createSagaMiddleware from 'redux-saga';\nimport createSocketIoMiddleware from 'redux-socket.io';\nimport { createStore, applyMiddleware, compose } from 'redux';\n\nimport { socket } from '../socket-io';\nimport { subscribeOnSocketStatus } from '../socket-io/subscribe';\n\nimport reducers from './reducers';\nimport rootSaga from './sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst socketMiddleware = createSocketIoMiddleware(socket, 'Socket/Client/');\n\nconst middlewares = [sagaMiddleware, socketMiddleware];\n\nconst composeEnhancers = (\n\tprocess.env.NODE_ENV !== 'production'\n\t&& typeof window === 'object'\n\t&& window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n)\n\t? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({ trace: true, traceLimit: 20 })\n\t: compose;\n\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(...middlewares)));\n\nsagaMiddleware.run(rootSaga);\n\nsubscribeOnSocketStatus(socket, store);\n\nexport {\n\tstore,\n};\n","import socketActions from '../redux/socket/actions';\nimport { SOCKET_STATUS } from '../constants/socket';\n\nexport function subscribeOnSocketStatus(socket, store) {\n\n\tsocket.on('connect', () => {\n\t\tstore.dispatch(socketActions.innerSocketStatus(SOCKET_STATUS.connected));\n\t\tstore.dispatch(socketActions.outcomingGetServerSettings());\n\t\tstore.dispatch(socketActions.outcomingGetConnectedUsers());\n\t});\n\n\tsocket.on('disconnect', () => {\n\t\tstore.dispatch(socketActions.innerSocketStatus(SOCKET_STATUS.disconnected));\n\t});\n\n\tsocket.on('reconnect', () => {\n\t\tstore.dispatch(socketActions.innerSocketStatus(SOCKET_STATUS.reconnection));\n\t});\n\n\tsocket.on('connect_error', () => {\n\t\tstore.dispatch(socketActions.innerSocketStatus(SOCKET_STATUS.error));\n\t});\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport Root from './containers/Root';\nimport { store } from './redux/store';\nimport './index.css';\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<Root />\n\t</Provider>,\n\trootElement\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","\nclass TransformsUtils {\n\n\tstatic createSelectOptions(valuesList = []) {\n\t\tif (!Array.isArray(valuesList)) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn valuesList.map(value => ({\n\t\t\tvalue,\n\t\t\ttitle: String(value),\n\t\t}));\n\t}\n\n\tstatic convertEventData(eventData) {\n\t\ttry {\n\t\t\tconst draft = eval(`(${eventData})`); /* eslint-disable-line no-eval */\n\t\t\treturn JSON.parse(JSON.stringify(draft));\n\n\t\t} catch (e) {\n\t\t\treturn eventData;\n\t\t}\n\t}\n}\n\nexport default TransformsUtils;\nexport { TransformsUtils };\n"],"sourceRoot":""}